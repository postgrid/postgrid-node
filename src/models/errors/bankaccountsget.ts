/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import {
  PermissionMissingError,
  PermissionMissingError$inboundSchema,
  PermissionMissingError$Outbound,
  PermissionMissingError$outboundSchema,
} from "./permissionmissingerror.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
import {
  UnauthorizedError,
  UnauthorizedError$inboundSchema,
  UnauthorizedError$Outbound,
  UnauthorizedError$outboundSchema,
} from "./unauthorizederror.js";

/**
 * the BankAccount.
 */
export type BankAccountsGetResponseBody =
  | UnauthorizedError
  | PermissionMissingError;

/** @internal */
export const BankAccountsGetResponseBody$inboundSchema: z.ZodType<
  BankAccountsGetResponseBody,
  z.ZodTypeDef,
  unknown
> = z.union([
  UnauthorizedError$inboundSchema,
  PermissionMissingError$inboundSchema,
]);

/** @internal */
export type BankAccountsGetResponseBody$Outbound =
  | UnauthorizedError$Outbound
  | PermissionMissingError$Outbound;

/** @internal */
export const BankAccountsGetResponseBody$outboundSchema: z.ZodType<
  BankAccountsGetResponseBody$Outbound,
  z.ZodTypeDef,
  BankAccountsGetResponseBody
> = z.union([
  UnauthorizedError$outboundSchema,
  PermissionMissingError$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace BankAccountsGetResponseBody$ {
  /** @deprecated use `BankAccountsGetResponseBody$inboundSchema` instead. */
  export const inboundSchema = BankAccountsGetResponseBody$inboundSchema;
  /** @deprecated use `BankAccountsGetResponseBody$outboundSchema` instead. */
  export const outboundSchema = BankAccountsGetResponseBody$outboundSchema;
  /** @deprecated use `BankAccountsGetResponseBody$Outbound` instead. */
  export type Outbound = BankAccountsGetResponseBody$Outbound;
}

export function bankAccountsGetResponseBodyToJSON(
  bankAccountsGetResponseBody: BankAccountsGetResponseBody,
): string {
  return JSON.stringify(
    BankAccountsGetResponseBody$outboundSchema.parse(
      bankAccountsGetResponseBody,
    ),
  );
}

export function bankAccountsGetResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<BankAccountsGetResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => BankAccountsGetResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'BankAccountsGetResponseBody' from JSON`,
  );
}
