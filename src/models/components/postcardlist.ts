/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Postcard,
  Postcard$inboundSchema,
  Postcard$Outbound,
  Postcard$outboundSchema,
} from "./postcard.js";

export const PostcardListObject = {
  List: "list",
} as const;
export type PostcardListObject = ClosedEnum<typeof PostcardListObject>;

export type PostcardList = {
  object: PostcardListObject;
  totalCount: number;
  skip: number;
  limit: number;
  data: Array<Postcard>;
};

/** @internal */
export const PostcardListObject$inboundSchema: z.ZodNativeEnum<
  typeof PostcardListObject
> = z.nativeEnum(PostcardListObject);

/** @internal */
export const PostcardListObject$outboundSchema: z.ZodNativeEnum<
  typeof PostcardListObject
> = PostcardListObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostcardListObject$ {
  /** @deprecated use `PostcardListObject$inboundSchema` instead. */
  export const inboundSchema = PostcardListObject$inboundSchema;
  /** @deprecated use `PostcardListObject$outboundSchema` instead. */
  export const outboundSchema = PostcardListObject$outboundSchema;
}

/** @internal */
export const PostcardList$inboundSchema: z.ZodType<
  PostcardList,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: PostcardListObject$inboundSchema,
  totalCount: z.number().int(),
  skip: z.number().int(),
  limit: z.number().int(),
  data: z.array(Postcard$inboundSchema),
});

/** @internal */
export type PostcardList$Outbound = {
  object: string;
  totalCount: number;
  skip: number;
  limit: number;
  data: Array<Postcard$Outbound>;
};

/** @internal */
export const PostcardList$outboundSchema: z.ZodType<
  PostcardList$Outbound,
  z.ZodTypeDef,
  PostcardList
> = z.object({
  object: PostcardListObject$outboundSchema,
  totalCount: z.number().int(),
  skip: z.number().int(),
  limit: z.number().int(),
  data: z.array(Postcard$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostcardList$ {
  /** @deprecated use `PostcardList$inboundSchema` instead. */
  export const inboundSchema = PostcardList$inboundSchema;
  /** @deprecated use `PostcardList$outboundSchema` instead. */
  export const outboundSchema = PostcardList$outboundSchema;
  /** @deprecated use `PostcardList$Outbound` instead. */
  export type Outbound = PostcardList$Outbound;
}

export function postcardListToJSON(postcardList: PostcardList): string {
  return JSON.stringify(PostcardList$outboundSchema.parse(postcardList));
}

export function postcardListFromJSON(
  jsonString: string,
): SafeParseResult<PostcardList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostcardList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostcardList' from JSON`,
  );
}
