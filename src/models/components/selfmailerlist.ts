/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  SelfMailer,
  SelfMailer$inboundSchema,
  SelfMailer$Outbound,
  SelfMailer$outboundSchema,
} from "./selfmailer.js";

export const SelfMailerListObject = {
  List: "list",
} as const;
export type SelfMailerListObject = ClosedEnum<typeof SelfMailerListObject>;

export type SelfMailerList = {
  object: SelfMailerListObject;
  totalCount: number;
  skip: number;
  limit: number;
  data: Array<SelfMailer>;
};

/** @internal */
export const SelfMailerListObject$inboundSchema: z.ZodNativeEnum<
  typeof SelfMailerListObject
> = z.nativeEnum(SelfMailerListObject);

/** @internal */
export const SelfMailerListObject$outboundSchema: z.ZodNativeEnum<
  typeof SelfMailerListObject
> = SelfMailerListObject$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SelfMailerListObject$ {
  /** @deprecated use `SelfMailerListObject$inboundSchema` instead. */
  export const inboundSchema = SelfMailerListObject$inboundSchema;
  /** @deprecated use `SelfMailerListObject$outboundSchema` instead. */
  export const outboundSchema = SelfMailerListObject$outboundSchema;
}

/** @internal */
export const SelfMailerList$inboundSchema: z.ZodType<
  SelfMailerList,
  z.ZodTypeDef,
  unknown
> = z.object({
  object: SelfMailerListObject$inboundSchema,
  totalCount: z.number().int(),
  skip: z.number().int(),
  limit: z.number().int(),
  data: z.array(SelfMailer$inboundSchema),
});

/** @internal */
export type SelfMailerList$Outbound = {
  object: string;
  totalCount: number;
  skip: number;
  limit: number;
  data: Array<SelfMailer$Outbound>;
};

/** @internal */
export const SelfMailerList$outboundSchema: z.ZodType<
  SelfMailerList$Outbound,
  z.ZodTypeDef,
  SelfMailerList
> = z.object({
  object: SelfMailerListObject$outboundSchema,
  totalCount: z.number().int(),
  skip: z.number().int(),
  limit: z.number().int(),
  data: z.array(SelfMailer$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SelfMailerList$ {
  /** @deprecated use `SelfMailerList$inboundSchema` instead. */
  export const inboundSchema = SelfMailerList$inboundSchema;
  /** @deprecated use `SelfMailerList$outboundSchema` instead. */
  export const outboundSchema = SelfMailerList$outboundSchema;
  /** @deprecated use `SelfMailerList$Outbound` instead. */
  export type Outbound = SelfMailerList$Outbound;
}

export function selfMailerListToJSON(selfMailerList: SelfMailerList): string {
  return JSON.stringify(SelfMailerList$outboundSchema.parse(selfMailerList));
}

export function selfMailerListFromJSON(
  jsonString: string,
): SafeParseResult<SelfMailerList, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SelfMailerList$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SelfMailerList' from JSON`,
  );
}
