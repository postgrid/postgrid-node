/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostcardCreateWithTemplate = {
  /**
   * The template ID for the front of the postcard. You can supply _either_ this or `frontHTML` but not both.
   */
  frontTemplate: string;
  /**
   * The template ID for the back of the postcard. You can supply _either_ this or `backHTML` but not both.
   */
  backTemplate: string;
};

/** @internal */
export const PostcardCreateWithTemplate$inboundSchema: z.ZodType<
  PostcardCreateWithTemplate,
  z.ZodTypeDef,
  unknown
> = z.object({
  frontTemplate: z.string(),
  backTemplate: z.string(),
});

/** @internal */
export type PostcardCreateWithTemplate$Outbound = {
  frontTemplate: string;
  backTemplate: string;
};

/** @internal */
export const PostcardCreateWithTemplate$outboundSchema: z.ZodType<
  PostcardCreateWithTemplate$Outbound,
  z.ZodTypeDef,
  PostcardCreateWithTemplate
> = z.object({
  frontTemplate: z.string(),
  backTemplate: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostcardCreateWithTemplate$ {
  /** @deprecated use `PostcardCreateWithTemplate$inboundSchema` instead. */
  export const inboundSchema = PostcardCreateWithTemplate$inboundSchema;
  /** @deprecated use `PostcardCreateWithTemplate$outboundSchema` instead. */
  export const outboundSchema = PostcardCreateWithTemplate$outboundSchema;
  /** @deprecated use `PostcardCreateWithTemplate$Outbound` instead. */
  export type Outbound = PostcardCreateWithTemplate$Outbound;
}

export function postcardCreateWithTemplateToJSON(
  postcardCreateWithTemplate: PostcardCreateWithTemplate,
): string {
  return JSON.stringify(
    PostcardCreateWithTemplate$outboundSchema.parse(postcardCreateWithTemplate),
  );
}

export function postcardCreateWithTemplateFromJSON(
  jsonString: string,
): SafeParseResult<PostcardCreateWithTemplate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostcardCreateWithTemplate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostcardCreateWithTemplate' from JSON`,
  );
}
