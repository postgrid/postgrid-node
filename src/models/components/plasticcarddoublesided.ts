/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Model representing a double-sided plastic card.
 */
export type PlasticCardDoubleSided = {
  /**
   * The HTML content for the front side of the double-sided plastic card.
   */
  frontHTML?: string | undefined;
  /**
   * The HTML content for the back side of the double-sided plastic card.
   */
  backHTML?: string | undefined;
  /**
   * The template ID for the front side of the double-sided plastic card.
   */
  frontTemplate?: string | undefined;
  /**
   * The template ID for the back side of the double-sided plastic card.
   */
  backTemplate?: string | undefined;
  /**
   * A URL pointing to a PDF file for the double-sided plastic card or the file itself.
   */
  pdf?: string | undefined;
};

/** @internal */
export const PlasticCardDoubleSided$inboundSchema: z.ZodType<
  PlasticCardDoubleSided,
  z.ZodTypeDef,
  unknown
> = z.object({
  frontHTML: z.string().optional(),
  backHTML: z.string().optional(),
  frontTemplate: z.string().optional(),
  backTemplate: z.string().optional(),
  pdf: z.string().optional(),
});

/** @internal */
export type PlasticCardDoubleSided$Outbound = {
  frontHTML?: string | undefined;
  backHTML?: string | undefined;
  frontTemplate?: string | undefined;
  backTemplate?: string | undefined;
  pdf?: string | undefined;
};

/** @internal */
export const PlasticCardDoubleSided$outboundSchema: z.ZodType<
  PlasticCardDoubleSided$Outbound,
  z.ZodTypeDef,
  PlasticCardDoubleSided
> = z.object({
  frontHTML: z.string().optional(),
  backHTML: z.string().optional(),
  frontTemplate: z.string().optional(),
  backTemplate: z.string().optional(),
  pdf: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PlasticCardDoubleSided$ {
  /** @deprecated use `PlasticCardDoubleSided$inboundSchema` instead. */
  export const inboundSchema = PlasticCardDoubleSided$inboundSchema;
  /** @deprecated use `PlasticCardDoubleSided$outboundSchema` instead. */
  export const outboundSchema = PlasticCardDoubleSided$outboundSchema;
  /** @deprecated use `PlasticCardDoubleSided$Outbound` instead. */
  export type Outbound = PlasticCardDoubleSided$Outbound;
}

export function plasticCardDoubleSidedToJSON(
  plasticCardDoubleSided: PlasticCardDoubleSided,
): string {
  return JSON.stringify(
    PlasticCardDoubleSided$outboundSchema.parse(plasticCardDoubleSided),
  );
}

export function plasticCardDoubleSidedFromJSON(
  jsonString: string,
): SafeParseResult<PlasticCardDoubleSided, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PlasticCardDoubleSided$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PlasticCardDoubleSided' from JSON`,
  );
}
