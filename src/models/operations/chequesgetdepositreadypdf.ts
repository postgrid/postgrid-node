/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChequesGetDepositReadyPDFRequest = {
  /**
   * The ID of the cheque you want the deposit-ready PDF for.
   */
  id: string;
};

/** @internal */
export const ChequesGetDepositReadyPDFRequest$inboundSchema: z.ZodType<
  ChequesGetDepositReadyPDFRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type ChequesGetDepositReadyPDFRequest$Outbound = {
  id: string;
};

/** @internal */
export const ChequesGetDepositReadyPDFRequest$outboundSchema: z.ZodType<
  ChequesGetDepositReadyPDFRequest$Outbound,
  z.ZodTypeDef,
  ChequesGetDepositReadyPDFRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChequesGetDepositReadyPDFRequest$ {
  /** @deprecated use `ChequesGetDepositReadyPDFRequest$inboundSchema` instead. */
  export const inboundSchema = ChequesGetDepositReadyPDFRequest$inboundSchema;
  /** @deprecated use `ChequesGetDepositReadyPDFRequest$outboundSchema` instead. */
  export const outboundSchema = ChequesGetDepositReadyPDFRequest$outboundSchema;
  /** @deprecated use `ChequesGetDepositReadyPDFRequest$Outbound` instead. */
  export type Outbound = ChequesGetDepositReadyPDFRequest$Outbound;
}

export function chequesGetDepositReadyPDFRequestToJSON(
  chequesGetDepositReadyPDFRequest: ChequesGetDepositReadyPDFRequest,
): string {
  return JSON.stringify(
    ChequesGetDepositReadyPDFRequest$outboundSchema.parse(
      chequesGetDepositReadyPDFRequest,
    ),
  );
}

export function chequesGetDepositReadyPDFRequestFromJSON(
  jsonString: string,
): SafeParseResult<ChequesGetDepositReadyPDFRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChequesGetDepositReadyPDFRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChequesGetDepositReadyPDFRequest' from JSON`,
  );
}
