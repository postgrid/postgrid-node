/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostcardsGetRequest = {
  /**
   * The ID of the postcard to retrieve.
   */
  id: string;
};

/** @internal */
export const PostcardsGetRequest$inboundSchema: z.ZodType<
  PostcardsGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type PostcardsGetRequest$Outbound = {
  id: string;
};

/** @internal */
export const PostcardsGetRequest$outboundSchema: z.ZodType<
  PostcardsGetRequest$Outbound,
  z.ZodTypeDef,
  PostcardsGetRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostcardsGetRequest$ {
  /** @deprecated use `PostcardsGetRequest$inboundSchema` instead. */
  export const inboundSchema = PostcardsGetRequest$inboundSchema;
  /** @deprecated use `PostcardsGetRequest$outboundSchema` instead. */
  export const outboundSchema = PostcardsGetRequest$outboundSchema;
  /** @deprecated use `PostcardsGetRequest$Outbound` instead. */
  export type Outbound = PostcardsGetRequest$Outbound;
}

export function postcardsGetRequestToJSON(
  postcardsGetRequest: PostcardsGetRequest,
): string {
  return JSON.stringify(
    PostcardsGetRequest$outboundSchema.parse(postcardsGetRequest),
  );
}

export function postcardsGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostcardsGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostcardsGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostcardsGetRequest' from JSON`,
  );
}
