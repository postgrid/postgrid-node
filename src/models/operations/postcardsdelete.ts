/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PostcardsDeleteRequest = {
  /**
   * The ID of the postcard you want to cancel.
   */
  id: string;
};

/** @internal */
export const PostcardsDeleteRequest$inboundSchema: z.ZodType<
  PostcardsDeleteRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type PostcardsDeleteRequest$Outbound = {
  id: string;
};

/** @internal */
export const PostcardsDeleteRequest$outboundSchema: z.ZodType<
  PostcardsDeleteRequest$Outbound,
  z.ZodTypeDef,
  PostcardsDeleteRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostcardsDeleteRequest$ {
  /** @deprecated use `PostcardsDeleteRequest$inboundSchema` instead. */
  export const inboundSchema = PostcardsDeleteRequest$inboundSchema;
  /** @deprecated use `PostcardsDeleteRequest$outboundSchema` instead. */
  export const outboundSchema = PostcardsDeleteRequest$outboundSchema;
  /** @deprecated use `PostcardsDeleteRequest$Outbound` instead. */
  export type Outbound = PostcardsDeleteRequest$Outbound;
}

export function postcardsDeleteRequestToJSON(
  postcardsDeleteRequest: PostcardsDeleteRequest,
): string {
  return JSON.stringify(
    PostcardsDeleteRequest$outboundSchema.parse(postcardsDeleteRequest),
  );
}

export function postcardsDeleteRequestFromJSON(
  jsonString: string,
): SafeParseResult<PostcardsDeleteRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PostcardsDeleteRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PostcardsDeleteRequest' from JSON`,
  );
}
