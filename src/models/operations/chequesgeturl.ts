/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ChequesGetURLRequest = {
  /**
   * The ID of the cheque to retrieve the preview URL for.
   */
  id: string;
};

/**
 * the Cheque Preview URL.
 */
export type ChequesGetURLResponseBody = {
  /**
   * A unique ID prefixed with cheque_
   */
  id: string;
  object: string;
  /**
   * A signed URL linking to the order preview PDF. The link remains valid for 15 minutes from the time of the API call.
   */
  url: string;
};

/** @internal */
export const ChequesGetURLRequest$inboundSchema: z.ZodType<
  ChequesGetURLRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type ChequesGetURLRequest$Outbound = {
  id: string;
};

/** @internal */
export const ChequesGetURLRequest$outboundSchema: z.ZodType<
  ChequesGetURLRequest$Outbound,
  z.ZodTypeDef,
  ChequesGetURLRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChequesGetURLRequest$ {
  /** @deprecated use `ChequesGetURLRequest$inboundSchema` instead. */
  export const inboundSchema = ChequesGetURLRequest$inboundSchema;
  /** @deprecated use `ChequesGetURLRequest$outboundSchema` instead. */
  export const outboundSchema = ChequesGetURLRequest$outboundSchema;
  /** @deprecated use `ChequesGetURLRequest$Outbound` instead. */
  export type Outbound = ChequesGetURLRequest$Outbound;
}

export function chequesGetURLRequestToJSON(
  chequesGetURLRequest: ChequesGetURLRequest,
): string {
  return JSON.stringify(
    ChequesGetURLRequest$outboundSchema.parse(chequesGetURLRequest),
  );
}

export function chequesGetURLRequestFromJSON(
  jsonString: string,
): SafeParseResult<ChequesGetURLRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChequesGetURLRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChequesGetURLRequest' from JSON`,
  );
}

/** @internal */
export const ChequesGetURLResponseBody$inboundSchema: z.ZodType<
  ChequesGetURLResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  object: z.string(),
  url: z.string(),
});

/** @internal */
export type ChequesGetURLResponseBody$Outbound = {
  id: string;
  object: string;
  url: string;
};

/** @internal */
export const ChequesGetURLResponseBody$outboundSchema: z.ZodType<
  ChequesGetURLResponseBody$Outbound,
  z.ZodTypeDef,
  ChequesGetURLResponseBody
> = z.object({
  id: z.string(),
  object: z.string(),
  url: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChequesGetURLResponseBody$ {
  /** @deprecated use `ChequesGetURLResponseBody$inboundSchema` instead. */
  export const inboundSchema = ChequesGetURLResponseBody$inboundSchema;
  /** @deprecated use `ChequesGetURLResponseBody$outboundSchema` instead. */
  export const outboundSchema = ChequesGetURLResponseBody$outboundSchema;
  /** @deprecated use `ChequesGetURLResponseBody$Outbound` instead. */
  export type Outbound = ChequesGetURLResponseBody$Outbound;
}

export function chequesGetURLResponseBodyToJSON(
  chequesGetURLResponseBody: ChequesGetURLResponseBody,
): string {
  return JSON.stringify(
    ChequesGetURLResponseBody$outboundSchema.parse(chequesGetURLResponseBody),
  );
}

export function chequesGetURLResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ChequesGetURLResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChequesGetURLResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChequesGetURLResponseBody' from JSON`,
  );
}
