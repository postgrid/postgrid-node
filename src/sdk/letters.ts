/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { lettersCreate } from "../funcs/lettersCreate.js";
import { lettersDelete } from "../funcs/lettersDelete.js";
import { lettersGet } from "../funcs/lettersGet.js";
import { lettersGetUrl } from "../funcs/lettersGetUrl.js";
import { lettersList } from "../funcs/lettersList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Letters extends ClientSDK {
  /**
   * Create Letter
   *
   * @remarks
   * Create a letter. Note that you can supply one of the following:
   * - HTML content for the letter
   * - A template ID for the letter
   * - A URL or file for a PDF for the letter
   * - Upload the aforementioned PDF file via a multipart form upload request
   */
  async create(
    request: components.LetterCreate,
    options?: RequestOptions,
  ): Promise<components.Letter> {
    return unwrapAsync(lettersCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * List Letters
   *
   * @remarks
   * Get a list of letters.
   */
  async list(
    request: operations.LettersListRequest,
    options?: RequestOptions,
  ): Promise<components.LetterList> {
    return unwrapAsync(lettersList(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Letter
   *
   * @remarks
   * Retrieve a letter by ID.
   */
  async get(
    request: operations.LettersGetRequest,
    options?: RequestOptions,
  ): Promise<components.Letter> {
    return unwrapAsync(lettersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Cancel Letter
   *
   * @remarks
   * Cancel a letter by ID. Note that this operation cannot be undone.
   */
  async delete(
    request: operations.LettersDeleteRequest,
    options?: RequestOptions,
  ): Promise<components.Letter> {
    return unwrapAsync(lettersDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Letter Preview
   *
   * @remarks
   * Retrieve a letter preview URL.
   *
   * This is only available for customers with our document management addon, which offers
   * document generation and hosting capabilities. This endpoint has a much higher rate limit
   * than the regular order retrieval endpoint, so it is suitable for customer-facing use-cases.
   */
  async getUrl(
    request: operations.LettersGetURLRequest,
    options?: RequestOptions,
  ): Promise<operations.LettersGetURLResponseBody> {
    return unwrapAsync(lettersGetUrl(
      this,
      request,
      options,
    ));
  }
}
