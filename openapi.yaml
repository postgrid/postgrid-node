openapi: 3.0.0
info:
  title: PostGrid
  contact:
    email: support@postgrid.com
    url: postgrid.com
  version: 0.0.0
tags:
  - name: Templates
  - name: Contacts
  - name: Letters
  - name: Postcards
  - name: Bank Accounts
  - name: Cheques
  - name: Boxes
  - name: Self Mailers
paths:
  /bank_accounts:
    post:
      operationId: BankAccounts_create
      summary: Create Bank Account
      description: |-
        Create a bank account. A US bank account is created by setting `bankCountryCode` to `US` and providing `accountNumber` and `routingNumber`. A canadian bank account can be created by specifying `bankCountryCode` as `CA` and setting `accountNumber`, `routeNumber`, and `transitNumber` accordingly.

        You must specify _either_ `signatureImage` or `signatureText`. The image can be supplied as either a URL or a multipart file upload.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
              example:
                id: bank_account_12345
                object: bank_account
                live: false
                bankName: Test Bank
                bankPrimaryLine: 145 mulberry st
                bankSecondaryLine: new york ny 10013
                bankCountryCode: US
                accountNumber: '1234567'
                routingNumber: '123456789'
                signatureText: Signature
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Bank Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreate'
            example:
              bankName: Test Bank
              bankPrimaryLine: 145 mulberry st
              bankSecondaryLine: new york ny 10013
              bankCountryCode: US
              accountNumber: '1234567'
              routingNumber: '123456789'
              signatureText: Example
    get:
      operationId: BankAccounts_list
      summary: List Bank Accounts
      description: Get a list of bank accounts.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountList'
              example:
                object: list
                limit: 10
                skip: 0
                totalCount: 1
                data:
                  - id: bank_account_12345
                    object: bank_account
                    live: false
                    bankName: Test Bank
                    bankPrimaryLine: 145 mulberry st
                    bankSecondaryLine: new york ny 10013
                    bankCountryCode: US
                    accountNumber: '1234567'
                    routingNumber: '123456789'
                    signatureText: Signature
                    createdAt: 2020-11-12T23:23:47.974Z
                    updatedAt: 2020-11-12T23:23:47.974Z
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Bank Accounts
  /bank_accounts/{id}:
    get:
      operationId: BankAccounts_get
      summary: Get Bank Account
      description: Retrieve a bank account by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the bank account to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: the BankAccount.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccount'
              example:
                id: bank_account_12345
                object: bank_account
                live: false
                bankName: Test Bank
                bankPrimaryLine: 145 mulberry st
                bankSecondaryLine: new york ny 10013
                bankCountryCode: US
                accountNumber: '1234567'
                routingNumber: '123456789'
                signatureText: Signature
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
        '401':
          description: the BankAccount.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the BankAccount.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the BankAccount.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the BankAccount.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Bank Accounts
    delete:
      operationId: BankAccounts_delete
      summary: Delete Bank Account
      description: Delete a bank account by ID. Note that this operation cannot be undone.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the bank account you want to delete.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - object
                  - id
                  - deleted
                properties:
                  object:
                    type: string
                    enum:
                      - bank_account
                    description: Always `bank_account`.
                    readOnly: true
                  id:
                    type: string
                    pattern: bank_account_[a-zA-Z0-9]+
                    description: A unique ID prefixed with bank_account_
                    readOnly: true
                  deleted:
                    type: boolean
                    enum:
                      - true
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Bank Accounts
  /boxes:
    post:
      operationId: Boxes_create
      summary: Create Box
      description: |-
        This endpoint allows you to create a box containing up to 100 cheques. 
        A Box is mailed to a single destination.

        To create a box. You must specify:
        - `to`: The recipient (contact or contact ID)
        - `from`: The sender (contact or contact ID)
        - `cheques`: An array of cheques to go in the box

        For each cheque You must specify:
        - `to`: The recipient (contact or contact ID)
        - `from`: The sender (contact or contact ID)
        - `bankAccount`: The bank account ID
        - `amount`: The amount to be sent
        - `number`: The cheque number
      parameters: []
      responses:
        '201':
          description: The created Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Box'
              example:
                id: box_123456
                object: box
                description: A sample box of cheques
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                cheques:
                  - from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    bankAccount: bank_123
                    amount: 12345
                    memo: Test Memo
                    logoURL: https://example.com/logo.png
                    messageTemplate: Thank you!
                    number: 1001
                    mergeVariables:
                      customKey: customValue
                mailingClass: first_class
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2025-01-01T12:00:00Z
                updatedAt: 2025-01-02T12:00:00Z
        '400':
          description: The created Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: The created Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The created Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The created Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: The created Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Boxes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoxCreate'
            example:
              to: contact_123
              from: contact_456
              cheques:
                - from: contact_456
                  to: contact_123
                  bankAccount: bank_abc
                  amount: 5000
                  number: 1042
        description: The details of the box to create.
    get:
      operationId: Boxes_list
      summary: List Boxes
      description: List all boxes.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoxList'
              example:
                object: list
                limit: 10
                skip: 0
                totalCount: 1
                data:
                  - id: box_123456
                    object: box
                    description: A sample box of cheques
                    status: ready
                    live: false
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    cheques:
                      - from:
                          id: contact_pxd7wnnD1xY6H6etKNvjb4
                          object: contact
                          live: false
                          addressLine1: 90 CANAL ST STE 600
                          city: BOSTON
                          provinceOrState: MA
                          postalOrZip: 90210-1234
                          countryCode: US
                          skipVerification: false
                          forceVerifiedStatus: false
                          addressStatus: verified
                          createdAt: 2022-02-16T15:08:41.052Z
                          updatedAt: 2022-02-16T15:08:41.052Z
                        to:
                          id: contact_pxd7wnnD1xY6H6etKNvjb4
                          object: contact
                          live: false
                          addressLine1: 90 CANAL ST STE 600
                          city: BOSTON
                          provinceOrState: MA
                          postalOrZip: 90210-1234
                          countryCode: US
                          skipVerification: false
                          forceVerifiedStatus: false
                          addressStatus: verified
                          createdAt: 2022-02-16T15:08:41.052Z
                          updatedAt: 2022-02-16T15:08:41.052Z
                        bankAccount: bank_123
                        amount: 12345
                        memo: Test Memo
                        logoURL: https://example.com/logo.png
                        messageTemplate: Thank you!
                        number: 1001
                        mergeVariables:
                          customKey: customValue
                    mailingClass: first_class
                    sendDate: 2020-11-12T23:23:47.974Z
                    createdAt: 2025-01-01T12:00:00Z
                    updatedAt: 2025-01-02T12:00:00Z
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Boxes
  /boxes/{id}:
    get:
      operationId: Boxes_get
      summary: Get Box
      description: Retrieve a box by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the box to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: The retrieved Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Box'
              example:
                id: box_123456
                object: box
                description: A sample box of cheques
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                cheques:
                  - from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    bankAccount: bank_123
                    amount: 12345
                    memo: Test Memo
                    logoURL: https://example.com/logo.png
                    messageTemplate: Thank you!
                    number: 1001
                    mergeVariables:
                      customKey: customValue
                mailingClass: first_class
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2025-01-01T12:00:00Z
                updatedAt: 2025-01-02T12:00:00Z
        '401':
          description: The retrieved Box.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: The retrieved Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The retrieved Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: The retrieved Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Boxes
    delete:
      operationId: Boxes_delete
      summary: Cancel Box
      description: Cancel a box by ID (cannot be undone).
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the box to cancel.
          schema:
            type: string
      responses:
        '200':
          description: The cancelled Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Box'
              example:
                id: box_123456
                object: box
                description: A sample box of cheques
                status: cancelled
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                cheques:
                  - from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    bankAccount: bank_123
                    amount: 12345
                    memo: Test Memo
                    logoURL: https://example.com/logo.png
                    messageTemplate: Thank you!
                    number: 1001
                    mergeVariables:
                      customKey: customValue
                mailingClass: first_class
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2025-01-01T12:00:00Z
                updatedAt: 2025-01-02T12:00:00Z
        '401':
          description: The cancelled Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The cancelled Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: The cancelled Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: The cancelled Box.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Boxes
  /cheques:
    post:
      operationId: Cheques_create
      summary: Create Cheque
      description: |-
        Create a cheque.

        This endpoint allows you to create a new cheque with the specified details.

        If you would like to create a digitalOnly cheque, the digitalOnly object with the watermark
        will need to be passed in. Feature is available on request, e-mail support@postgrid.com for access.

        Example request body:

        ```json
        {
          "from": "contact_123",
          "bankAccount": "bank_123",
          "amount": 1000,
          "currencyCode": "USD",
          "number": 123456,
          "size": "us_letter",
          "digitalOnly": {
            "watermark": "VOID"
          }
        }
        ```
      parameters: []
      responses:
        '201':
          description: the created Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheque'
              example:
                id: cheque_123456
                object: cheque
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                bankAccount: bank_123
                amount: 1000
                currencyCode: USD
                number: 123456
                size: us_letter
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '400':
          description: the created Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: the created Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: the created Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the created Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the created Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Cheques
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChequeCreate'
            example:
              to: contact_123
              from: contact_123
              bankAccount: bank_123
              amount: 1000
              currencyCode: USD
              number: 123456
              size: us_letter
        description: The details of the cheque to create.
    get:
      operationId: Cheques_list
      summary: List Cheques
      description: Get a list of cheques.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChequeList'
              example:
                object: list
                limit: 10
                skip: 0
                totalCount: 1
                data:
                  - id: cheque_123456
                    object: cheque
                    status: ready
                    live: false
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    bankAccount: bank_123
                    amount: 1000
                    currencyCode: USD
                    number: 123456
                    size: us_letter
                    sendDate: 2020-11-12T23:23:47.974Z
                    createdAt: 2020-11-12T23:23:47.974Z
                    updatedAt: 2020-11-12T23:23:47.974Z
                    mailingClass: first_class
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Cheques
  /cheques/{id}:
    get:
      operationId: Cheques_get
      summary: Get Cheque
      description: Retrieve a cheque by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the cheque to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: the Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheque'
              example:
                id: cheque_123456
                object: cheque
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                bankAccount: bank_123
                amount: 1000
                currencyCode: USD
                number: 123456
                size: us_letter
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '401':
          description: the Cheque.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Cheque.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Cheques
    delete:
      operationId: Cheques_delete
      summary: Cancel Cheque
      description: Cancel a cheque by ID. Note that this operation cannot be undone.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the cheque you want to cancel.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheque'
              example:
                id: cheque_123456
                object: cheque
                status: cancelled
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                bankAccount: bank_123
                amount: 1000
                currencyCode: USD
                number: 123456
                size: us_letter
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Cheques
  /cheques/{id}/url:
    get:
      operationId: Cheques_getURL
      summary: Get Cheque Preview
      description: |-
        Retrieve a cheque preview URL.

        This is only available for customers with our document management addon, which offers
        document generation and hosting capabilities. This endpoint has a much higher rate limit
        than the regular order retrieval endpoint, so it is suitable for customer-facing use-cases.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the cheque to retrieve the preview URL for.
          schema:
            type: string
      responses:
        '200':
          description: the Cheque Preview URL.
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - object
                  - url
                properties:
                  id:
                    type: string
                    pattern: cheque_[a-zA-Z0-9]+
                    description: A unique ID prefixed with cheque_
                    readOnly: true
                  object:
                    type: string
                    pattern: cheque_url
                    readOnly: true
                  url:
                    type: string
                    format: uri
                    description: A signed URL linking to the order preview PDF. The link remains valid for 15 minutes from the time of the API call.
                    readOnly: true
              example:
                id: cheque_123456
                object: cheque_url
                url: https://pg-prod-bucket-1.s3.amazonaws.com/test/cheque_uzTtdAPiBVC25hjEYDvyLk?AWSAccessKeyId=AKIA5GFUILSULWTWCR64&Expires=1736192587&Signature=GS6kJK3fgWWy49jq1Yb%2FRn%2BQjD4%3D
        '401':
          description: the Cheque Preview URL.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Cheque Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Cheque Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Cheque Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Cheques
  /cheques/{id}/with_deposit_ready_pdf:
    get:
      operationId: Cheques_getDepositReadyPDF
      summary: Retrieve Cheque Deposit-Ready PDF (Digital Only)
      description: |-
        Retrieve the deposit-ready PDF for a digital-only cheque. The endpoint can only be called by users with 'Admin' role.
        In test mode, the preview PDF of the digitalOnly cheque and the deposit-ready PDF are the same.
        In live mode, the deposit-ready will have the full account number.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the cheque you want the deposit-ready PDF for.
          schema:
            type: string
      responses:
        '200':
          description: Cheque object with the depositReadyPDFURL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheque'
              example:
                id: cheque_123456
                object: cheque
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                bankAccount: bank_123
                amount: 1000
                currencyCode: USD
                number: 123456
                size: us_letter
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
                digitalOnly:
                  watermark: TEST
                depositReadyPDFURL: https://example.s3.amazonaws.com/deposit_ready.pdf
        '400':
          description: Cheque object with the depositReadyPDFURL
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    enum:
                      - error
                  error:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - cheque_not_digital_only_error
                      message:
                        type: string
                        enum:
                          - Cheque is not digital only
                    required:
                      - type
                      - message
                required:
                  - object
                  - error
        '401':
          description: Cheque object with the depositReadyPDFURL
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: Cheque object with the depositReadyPDFURL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Cheque object with the depositReadyPDFURL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Cheque object with the depositReadyPDFURL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Cheques
  /contacts:
    post:
      operationId: Contacts_create
      summary: Create Contact
      description: |-
        Creates a contact. This will also verify the contact's address **if you create it using a live API key**. To sucessfully create a contact, either a `firstName`, a `companyName`, or both are required. You can supply both, but you **cannot** supply neither.

        You have the option to supply the entire address (except for `countryCode`) via `addressLine1`, in which case PostGrid will parse it automatically. However, this is **not guaranteed to be correct**, so we recommend passing along the structured address fields (`city`, `provinceOrState`, etc) if you have them.

        _Note that if you create a contact that has identical information to another contact, this will simply update the description of the existing contact and return it. This avoids creating duplicate contacts._
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                Create Contact with Single Line:
                  summary: Create Contact with Single Line
                  description: This example shows that you can call the contact creation endpoint with an unstructured address. You can supply all the address info into `addressLine1` and PostGrid's address parsing engine will automatically break it apart into the appropriate fields. Note that the parsing operation is not guaranteed to be correct, so if you already have the structured data (`city`, `provinceOrState`, etc), prefer providing it.
                  value:
                    id: contact_pxd7wnnD1xY6H6etKNvjb4
                    object: contact
                    live: false
                    addressLine1: 90 CANAL ST STE 600
                    city: BOSTON
                    provinceOrState: MA
                    postalOrZip: 90210-1234
                    countryCode: US
                    skipVerification: false
                    forceVerifiedStatus: false
                    addressStatus: verified
                    createdAt: 2022-02-16T15:08:41.052Z
                    updatedAt: 2022-02-16T15:08:41.052Z
                Create Contact with Structured Address:
                  summary: Create Contact with Structured Address
                  value:
                    id: contact_pxd7wnnD1xY6H6etKNvjb4
                    object: contact
                    live: false
                    addressLine1: 90 CANAL ST STE 600
                    city: BOSTON
                    provinceOrState: MA
                    postalOrZip: 90210-1234
                    countryCode: US
                    skipVerification: false
                    forceVerifiedStatus: false
                    addressStatus: verified
                    createdAt: 2022-02-16T15:08:41.052Z
                    updatedAt: 2022-02-16T15:08:41.052Z
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreate'
            examples:
              Create Contact with Single Line:
                summary: Create Contact with Single Line
                description: This example shows that you can call the contact creation endpoint with an unstructured address. You can supply all the address info into `addressLine1` and PostGrid's address parsing engine will automatically break it apart into the appropriate fields. Note that the parsing operation is not guaranteed to be correct, so if you already have the structured data (`city`, `provinceOrState`, etc), prefer providing it.
                value:
                  firstName: Kevin
                  companyName: PostGrid
                  addressLine1: 90 Canal St Suite 600, Boston MA 90210
                  countryCode: US
              Create Contact with Structured Address:
                summary: Create Contact with Structured Address
                value:
                  firstName: Kevin
                  companyName: PostGrid
                  addressLine1: 90 Canal St
                  addressLine2: Suite 600
                  city: Boston
                  provinceOrState: MA
                  countryCode: US
    get:
      operationId: Contacts_list
      summary: List Contacts
      description: Get a list of contacts.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - object
                  - totalCount
                  - skip
                  - limit
                  - data
                properties:
                  object:
                    type: string
                    enum:
                      - list
                  totalCount:
                    type: integer
                    format: int32
                  skip:
                    type: integer
                    format: int32
                  limit:
                    type: integer
                    format: int32
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Contact'
              example:
                skip: 0
                limit: 10
                totalCount: 1
                object: list
                data:
                  - id: contact_pxd7wnnD1xY6H6etKNvjb4
                    object: contact
                    live: false
                    addressLine1: 90 CANAL ST STE 600
                    city: BOSTON
                    provinceOrState: MA
                    postalOrZip: 90210-1234
                    countryCode: US
                    skipVerification: false
                    forceVerifiedStatus: false
                    addressStatus: verified
                    createdAt: 2022-02-16T15:08:41.052Z
                    updatedAt: 2022-02-16T15:08:41.052Z
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Contacts
  /contacts/{id}:
    get:
      operationId: Contacts_get
      summary: Get Contact
      description: Retrieve a contact.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              example:
                id: contact_pxd7wnnD1xY6H6etKNvjb4
                object: contact
                live: false
                addressLine1: 90 CANAL ST STE 600
                city: BOSTON
                provinceOrState: MA
                postalOrZip: 90210-1234
                countryCode: US
                skipVerification: false
                forceVerifiedStatus: false
                addressStatus: verified
                createdAt: 2022-02-16T15:08:41.052Z
                updatedAt: 2022-02-16T15:08:41.052Z
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Contacts
    delete:
      operationId: Contacts_delete
      summary: Delete Contact
      description: Delete a contact. Note that this will not affect orders that were sent to this contact.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - object
                  - id
                  - deleted
                properties:
                  object:
                    type: string
                    enum:
                      - contact
                    description: Always `contact`.
                    readOnly: true
                  id:
                    type: string
                    pattern: contact_[a-zA-Z0-9]+
                    description: A unique ID prefixed with contact_
                    readOnly: true
                  deleted:
                    type: boolean
                    enum:
                      - true
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Contacts
  /letters:
    post:
      operationId: Letters_create
      summary: Create Letter
      description: |-
        Create a letter. Note that you can supply one of the following:
        - HTML content for the letter
        - A template ID for the letter
        - A URL or file for a PDF for the letter
        - Upload the aforementioned PDF file via a multipart form upload request
      parameters: []
      responses:
        '201':
          description: the created Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Letter'
              example:
                id: letter_123456
                object: letter
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: us_letter
                doubleSided: true
                color: false
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
                envelope: standard
                addressPlacement: top_first_page
                html: <html>Content</html>
        '400':
          description: the created Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: the created Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: the created Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the created Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the created Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Letters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LetterCreate'
            example:
              to: contact_123
              from: contact_123
              html: <html>Content</html>
        description: The details of the letter to create.
    get:
      operationId: Letters_list
      summary: List Letters
      description: Get a list of letters.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LetterList'
              example:
                object: list
                limit: 10
                skip: 0
                totalCount: 1
                data:
                  - id: letter_123456
                    object: letter
                    status: ready
                    live: false
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    size: us_letter
                    doubleSided: true
                    color: false
                    sendDate: 2020-11-12T23:23:47.974Z
                    createdAt: 2020-11-12T23:23:47.974Z
                    updatedAt: 2020-11-12T23:23:47.974Z
                    mailingClass: first_class
                    envelope: standard
                    addressPlacement: top_first_page
                    html: <html>Content</html>
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Letters
  /letters/{id}:
    get:
      operationId: Letters_get
      summary: Get Letter
      description: Retrieve a letter by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the letter to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: the Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Letter'
              example:
                id: letter_123456
                object: letter
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: us_letter
                doubleSided: true
                color: false
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
                envelope: standard
                addressPlacement: top_first_page
                html: <html>Content</html>
        '401':
          description: the Letter.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Letter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Letters
    delete:
      operationId: Letters_delete
      summary: Cancel Letter
      description: Cancel a letter by ID. Note that this operation cannot be undone.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the letter you want to cancel.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Letter'
              example:
                id: letter_123456
                object: letter
                status: cancelled
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: us_letter
                doubleSided: true
                color: false
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
                envelope: standard
                addressPlacement: top_first_page
                html: <html>Content</html>
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Letters
  /letters/{id}/url:
    get:
      operationId: Letters_getURL
      summary: Get Letter Preview
      description: |-
        Retrieve a letter preview URL.

        This is only available for customers with our document management addon, which offers
        document generation and hosting capabilities. This endpoint has a much higher rate limit
        than the regular order retrieval endpoint, so it is suitable for customer-facing use-cases.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the letter to retrieve the preview URL for.
          schema:
            type: string
      responses:
        '200':
          description: the Letter Preview URL.
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - object
                  - url
                properties:
                  id:
                    type: string
                    pattern: letter_[a-zA-Z0-9]+
                    description: A unique ID prefixed with letter_
                    readOnly: true
                  object:
                    type: string
                    pattern: letter_url
                    readOnly: true
                  url:
                    type: string
                    format: uri
                    description: A signed URL linking to the order preview PDF. The link remains valid for 15 minutes from the time of the API call.
                    readOnly: true
              example:
                id: letter_123456
                object: letter_url
                url: https://pg-prod-bucket-1.s3.amazonaws.com/test/letter_uzTtdAPiBVC25hjEYDvyLk?AWSAccessKeyId=AKIA5GFUILSULWTWCR64&Expires=1736192587&Signature=GS6kJK3fgWWy49jq1Yb%2FRn%2BQjD4%3D
        '401':
          description: the Letter Preview URL.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Letter Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Letter Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Letter Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Letters
  /postcards:
    post:
      operationId: Postcards_create
      summary: Create Postcard
      description: |-
        Create a postcard. Note that you can supply one of the following:
        - HTML content for the front and back of the postcard
        - A template ID for the front and back of the postcard
        - A URL or file for a 2 page PDF where the first page is the front of the postcard and the second page is the back
        - Upload the aforementioned PDF file via a multipart form upload request
      parameters: []
      responses:
        '201':
          description: the created Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postcard'
              example:
                id: postcard_123456
                object: postcard
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: 6x4
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '400':
          description: the created Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: the created Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: the created Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the created Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the created Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Postcards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostcardCreate'
            example:
              to: contact_456
              from: contact_123
              size: 6x4
              frontHTML: <html>Front</html>
              backHTML: <html>Back</html>
        description: The details of the postcard to create.
    get:
      operationId: Postcards_list
      summary: List Postcards
      description: Get a list of postcards.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostcardList'
              example:
                object: list
                limit: 10
                skip: 0
                totalCount: 1
                data:
                  - id: postcard_123456
                    object: postcard
                    status: ready
                    live: false
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    size: 6x4
                    sendDate: 2020-11-12T23:23:47.974Z
                    createdAt: 2020-11-12T23:23:47.974Z
                    updatedAt: 2020-11-12T23:23:47.974Z
                    mailingClass: first_class
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Postcards
  /postcards/{id}:
    get:
      operationId: Postcards_get
      summary: Get Postcard
      description: Retrieve a postcard by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the postcard to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: the Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postcard'
              example:
                id: postcard_123456
                object: postcard
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: 6x4
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '401':
          description: the Postcard.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Postcard.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Postcards
    delete:
      operationId: Postcards_delete
      summary: Cancel Postcard
      description: Cancel a postcard by ID. Note that this operation cannot be undone.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the postcard you want to cancel.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Postcard'
              example:
                id: postcard_123456
                object: postcard
                status: cancelled
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: 6x4
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Postcards
  /postcards/{id}/url:
    get:
      operationId: Postcards_getURL
      summary: Get Postcard Preview
      description: |-
        Retrieve a postcard preview URL.

        This is only available for customers with our document management addon, which offers
        document generation and hosting capabilities. This endpoint has a much higher rate limit
        than the regular order retrieval endpoint, so it is suitable for customer-facing use-cases.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the postcard to retrieve the preview URL for.
          schema:
            type: string
      responses:
        '200':
          description: the Postcard Preview URL.
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - object
                  - url
                properties:
                  id:
                    type: string
                    pattern: postcard_[a-zA-Z0-9]+
                    description: A unique ID prefixed with postcard_
                    readOnly: true
                  object:
                    type: string
                    pattern: postcard_url
                    readOnly: true
                  url:
                    type: string
                    format: uri
                    description: A signed URL linking to the order preview PDF. The link remains valid for 15 minutes from the time of the API call.
                    readOnly: true
              example:
                id: postcard_123456
                object: postcard_url
                url: https://pg-prod-bucket-1.s3.amazonaws.com/test/postcard_uzTtdAPiBVC25hjEYDvyLk?AWSAccessKeyId=AKIA5GFUILSULWTWCR64&Expires=1736192587&Signature=GS6kJK3fgWWy49jq1Yb%2FRn%2BQjD4%3D
        '401':
          description: the Postcard Preview URL.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Postcard Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Postcard Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Postcard Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Postcards
  /self-mailers:
    post:
      operationId: SelfMailers_create
      summary: Create Self Mailer
      description: |-
        Create a self-mailer. Note that you can supply one of the following:
        - HTML content for the inside and outside of the self-mailer
        - A template ID for the inside and outside of the self-mailer
        - A URL or file for a 2 page PDF where the first page is the outside of the self-mailer and the second page is the inside
        - Upload the aforementioned PDF file via a multipart form upload request
      parameters: []
      responses:
        '201':
          description: the created SelfMailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMailer'
              example:
                id: self_mailer_123456
                object: self_mailer
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: 8.5x11_bifold
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '400':
          description: the created SelfMailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: the created SelfMailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: the created SelfMailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the created SelfMailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the created SelfMailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Self Mailers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfMailerCreate'
            example:
              to: contact_456
              from: contact_123
              size: 8.5x11_bifold
              insideHTML: <html>Inside</html>
              outsideHTML: <html>Outside</html>
        description: The details of the self-mailer to create.
    get:
      operationId: SelfMailers_list
      summary: List Self Mailers
      description: Get a list of self-mailers.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMailerList'
              example:
                object: list
                limit: 10
                skip: 0
                totalCount: 1
                data:
                  - id: self_mailer_123456
                    object: self_mailer
                    status: ready
                    live: false
                    to:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    from:
                      id: contact_pxd7wnnD1xY6H6etKNvjb4
                      object: contact
                      live: false
                      addressLine1: 90 CANAL ST STE 600
                      city: BOSTON
                      provinceOrState: MA
                      postalOrZip: 90210-1234
                      countryCode: US
                      skipVerification: false
                      forceVerifiedStatus: false
                      addressStatus: verified
                      createdAt: 2022-02-16T15:08:41.052Z
                      updatedAt: 2022-02-16T15:08:41.052Z
                    size: 8.5x11_bifold
                    sendDate: 2020-11-12T23:23:47.974Z
                    createdAt: 2020-11-12T23:23:47.974Z
                    updatedAt: 2020-11-12T23:23:47.974Z
                    mailingClass: first_class
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Self Mailers
  /self-mailers/{id}:
    get:
      operationId: SelfMailers_get
      summary: Get Self Mailer
      description: Retrieve a self-mailer by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the self-mailer to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: the Self-Mailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMailer'
              example:
                id: self_mailer_123456
                object: self_mailer
                status: ready
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: 8.5x11_bifold
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '401':
          description: the Self-Mailer.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Self-Mailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Self-Mailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Self-Mailer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Self Mailers
    delete:
      operationId: SelfMailers_delete
      summary: Cancel Self Mailer
      description: Cancel a self-mailer by ID. Note that this operation cannot be undone.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the self-mailer you want to cancel.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelfMailer'
              example:
                id: self_mailer_123456
                object: self_mailer
                status: cancelled
                live: false
                to:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                from:
                  id: contact_pxd7wnnD1xY6H6etKNvjb4
                  object: contact
                  live: false
                  addressLine1: 90 CANAL ST STE 600
                  city: BOSTON
                  provinceOrState: MA
                  postalOrZip: 90210-1234
                  countryCode: US
                  skipVerification: false
                  forceVerifiedStatus: false
                  addressStatus: verified
                  createdAt: 2022-02-16T15:08:41.052Z
                  updatedAt: 2022-02-16T15:08:41.052Z
                size: 8.5x11_bifold
                sendDate: 2020-11-12T23:23:47.974Z
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
                mailingClass: first_class
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Self Mailers
  /self-mailers/{id}/url:
    get:
      operationId: SelfMailers_getURL
      summary: Get Self Mailer Preview
      description: |-
        Retrieve a self-mailer preview URL.

        This is only available for customers with our document management addon, which offers
        document generation and hosting capabilities. This endpoint has a much higher rate limit
        than the regular order retrieval endpoint, so it is suitable for customer-facing use-cases.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the self-mailer to retrieve the preview URL for.
          schema:
            type: string
      responses:
        '200':
          description: the Self-Mailer Preview URL.
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - object
                  - url
                properties:
                  id:
                    type: string
                    pattern: self_mailer_[a-zA-Z0-9]+
                    description: A unique ID prefixed with self_mailer_
                    readOnly: true
                  object:
                    type: string
                    pattern: self_mailer_url
                    readOnly: true
                  url:
                    type: string
                    format: uri
                    description: A signed URL linking to the order preview PDF. The link remains valid for 15 minutes from the time of the API call.
                    readOnly: true
              example:
                id: self_mailer_123456
                object: self_mailer_url
                url: https://pg-prod-bucket-1.s3.amazonaws.com/test/self_mailer_uzTtdAPiBVC25hjEYDvyLk?AWSAccessKeyId=AKIA5GFUILSULWTWCR64&Expires=1736192587&Signature=GS6kJK3fgWWy49jq1Yb%2FRn%2BQjD4%3D
        '401':
          description: the Self-Mailer Preview URL.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Self-Mailer Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Self-Mailer Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Self-Mailer Preview URL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Self Mailers
  /templates:
    post:
      operationId: Templates_create
      summary: Create Template
      description: Create a template. Note that if you want to create a template that works with our template editor, you must use our dashboard.
      parameters: []
      responses:
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
              example:
                id: template_tBnVEzz878mXLbHQaz86j8
                object: template
                live: false
                description: Test
                html: <b>Hello</b> {{to.firstName}}!
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateCreate'
            example:
              description: Test
              html: <b>Hello</b> {{to.firstName}}
    get:
      operationId: Templates_list
      summary: List Templates
      description: Get a list of templates.
      parameters:
        - $ref: '#/components/parameters/ListParams.skip'
        - $ref: '#/components/parameters/ListParams.limit'
        - $ref: '#/components/parameters/ListParams.search'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateList'
              example:
                object: list
                limit: 10
                skip: 0
                totalCount: 1
                data:
                  - id: template_tBnVEzz878mXLbHQaz86j8
                    object: template
                    live: false
                    description: Test
                    html: <b>Hello</b> {{to.firstName}}!
                    createdAt: 2020-11-12T23:23:47.974Z
                    updatedAt: 2020-11-12T23:23:47.974Z
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Templates
  /templates/{id}:
    get:
      operationId: Templates_get
      summary: Get Template
      description: Retrieve a template by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the template to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: the Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
              example:
                id: template_tBnVEzz878mXLbHQaz86j8
                object: template
                live: false
                description: Test
                html: <b>Hello</b> {{to.firstName}}!
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
        '401':
          description: the Template.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UnauthorizedError'
                  - $ref: '#/components/schemas/PermissionMissingError'
        '404':
          description: the Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Templates
    post:
      operationId: Templates_update
      summary: Update Template
      description: Update a template by ID.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the template you want to update.
          schema:
            type: string
      responses:
        '200':
          description: the updated Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
              example:
                id: template_tBnVEzz878mXLbHQaz86j8
                object: template
                live: false
                description: Test
                html: <b>Hello</b> {{to.firstName}}!
                createdAt: 2020-11-12T23:23:47.974Z
                updatedAt: 2020-11-12T23:23:47.974Z
        '400':
          description: the updated Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: the updated Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: the updated Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: the updated Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: the updated Template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateUpdate'
            example:
              description: Test
              html: <b>Hello</b> {{to.firstName}}!
    delete:
      operationId: Templates_delete
      summary: Delete Template
      description: Delete a template by ID. Note that this operation cannot be undone.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the template you want to delete.
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                required:
                  - object
                  - id
                  - deleted
                properties:
                  object:
                    type: string
                    enum:
                      - template
                    description: Always `template`.
                    readOnly: true
                  id:
                    type: string
                    pattern: template_[a-zA-Z0-9]+
                    description: A unique ID prefixed with template_
                    readOnly: true
                  deleted:
                    type: boolean
                    enum:
                      - true
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '422':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableError'
        '429':
          description: Client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
      tags:
        - Templates
security:
  - ApiKeyAuth: []
components:
  parameters:
    ListParams.limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 10
      explode: false
    ListParams.search:
      name: search
      in: query
      required: false
      description: You can supply any string to help narrow down the list of resources. For example, if you pass `"New York"` (quoted), it will return resources that have that string present somewhere in their response. Alternatively, you can supply a structured search query. See the documentation on `StructuredSearchQuery` for more details.
      schema:
        anyOf:
          - type: string
          - $ref: '#/components/schemas/StructuredSearchQuery'
      explode: false
    ListParams.skip:
      name: skip
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 0
      explode: false
  schemas:
    AddressPlacement:
      type: string
      enum:
        - top_first_page
        - insert_blank_page
      description: Enum representing the placement of the address on the letter.
    AttachedPDF:
      type: object
      required:
        - file
        - placement
      properties:
        file:
          anyOf:
            - type: string
              format: uri
            - type: string
              format: byte
          description: The file (multipart form upload) or URL pointing to a PDF for the attached PDF.
        placement:
          allOf:
            - $ref: '#/components/schemas/AttachedPDFPlacement'
          description: The placement of the attached PDF.
      description: Model representing an attached PDF.
    AttachedPDFPlacement:
      type: string
      enum:
        - before_template
        - after_template
      description: Enum representing the placement of the attached PDF.
    BankAccount:
      type: object
      required:
        - object
        - bankName
        - bankCountryCode
        - accountNumber
        - id
        - live
        - createdAt
        - updatedAt
      properties:
        object:
          type: string
          enum:
            - bank_account
          description: Always `bank_account`.
        bankName:
          type: string
          description: The name of the bank.
        bankPrimaryLine:
          type: string
          description: The primary address line of the bank.
        bankSecondaryLine:
          type: string
          description: The secondary address line of the bank.
        bankCountryCode:
          allOf:
            - $ref: '#/components/schemas/BankAccountCountryCode'
          description: The country code of the bank.
        accountNumber:
          type: string
          description: The account number of the bank account.
        routingNumber:
          type: string
          description: The routing number of the bank account (for US).
        transitNumber:
          type: string
          description: The transit number of the bank account (for CA).
        routeNumber:
          type: string
          description: The route number of the bank account (for CA).
        id:
          type: string
          pattern: bank_account_[a-zA-Z0-9]+
          description: A unique ID prefixed with bank_account_
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        live:
          type: boolean
          description: '`true` if this is a live mode resource else `false`.'
        createdAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was created.
        updatedAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was last updated.
        signatureText:
          type: string
          description: The signature text PostGrid uses to generate a signature for cheques created using this bank account. This is omitted if `signatureImage` is present.
        signatureImage:
          type: string
          format: uri
          description: A signed link to the signature image uploaded when this bank account was created. This is omitted if `signatureText` is present.
    BankAccountBase:
      type: object
      required:
        - object
        - bankName
        - bankCountryCode
        - accountNumber
      properties:
        object:
          type: string
          enum:
            - bank_account
          description: Always `bank_account`.
          readOnly: true
        bankName:
          type: string
          description: The name of the bank.
        bankPrimaryLine:
          type: string
          description: The primary address line of the bank.
        bankSecondaryLine:
          type: string
          description: The secondary address line of the bank.
        bankCountryCode:
          allOf:
            - $ref: '#/components/schemas/BankAccountCountryCode'
          description: The country code of the bank.
        accountNumber:
          type: string
          description: The account number of the bank account.
        routingNumber:
          type: string
          description: The routing number of the bank account (for US).
        transitNumber:
          type: string
          description: The transit number of the bank account (for CA).
        routeNumber:
          type: string
          description: The route number of the bank account (for CA).
      allOf:
        - type: object
          required:
            - id
            - live
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
              pattern: bank_account_[a-zA-Z0-9]+
              description: A unique ID prefixed with bank_account_
              readOnly: true
            description:
              type: string
              description: An optional string describing this resource. Will be visible in the API and the dashboard.
            metadata:
              type: object
              additionalProperties: {}
              description: See the section on Metadata.
            live:
              type: boolean
              description: '`true` if this is a live mode resource else `false`.'
              readOnly: true
            createdAt:
              type: string
              format: date-time
              description: The UTC time at which this resource was created.
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: The UTC time at which this resource was last updated.
              readOnly: true
    BankAccountCAFields:
      type: object
      properties:
        transitNumber:
          type: string
          description: The transit number of the bank account (for CA).
        routeNumber:
          type: string
          description: The route number of the bank account (for CA).
    BankAccountCountryCode:
      type: string
      enum:
        - CA
        - US
      description: |-
        Countries typically have different bank account formats and standards. These are the countries
        which PostGrid's bank accounts API supports.
    BankAccountCreate:
      anyOf:
        - $ref: '#/components/schemas/BankAccountCreateSignatureText'
        - $ref: '#/components/schemas/BankAccountCreateSignatureImageURL'
        - $ref: '#/components/schemas/BankAccountCreateSignatureImageFile'
    BankAccountCreateSignatureImageFile:
      type: object
      required:
        - bankName
        - bankCountryCode
        - accountNumber
        - signatureImage
      properties:
        bankName:
          type: string
          description: The name of the bank.
        bankPrimaryLine:
          type: string
          description: The primary address line of the bank.
        bankSecondaryLine:
          type: string
          description: The secondary address line of the bank.
        bankCountryCode:
          allOf:
            - $ref: '#/components/schemas/BankAccountCountryCode'
          description: The country code of the bank.
        accountNumber:
          type: string
          description: The account number of the bank account.
        routingNumber:
          type: string
          description: The routing number of the bank account (for US).
        transitNumber:
          type: string
          description: The transit number of the bank account (for CA).
        routeNumber:
          type: string
          description: The route number of the bank account (for CA).
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        signatureImage:
          type: string
          format: byte
          description: A PNG or JPEG file which PostGrid will apply to checks created with this bank account.
    BankAccountCreateSignatureImageURL:
      type: object
      required:
        - bankName
        - bankCountryCode
        - accountNumber
        - signatureImage
      properties:
        bankName:
          type: string
          description: The name of the bank.
        bankPrimaryLine:
          type: string
          description: The primary address line of the bank.
        bankSecondaryLine:
          type: string
          description: The secondary address line of the bank.
        bankCountryCode:
          allOf:
            - $ref: '#/components/schemas/BankAccountCountryCode'
          description: The country code of the bank.
        accountNumber:
          type: string
          description: The account number of the bank account.
        routingNumber:
          type: string
          description: The routing number of the bank account (for US).
        transitNumber:
          type: string
          description: The transit number of the bank account (for CA).
        routeNumber:
          type: string
          description: The route number of the bank account (for CA).
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        signatureImage:
          type: string
          format: uri
          description: Link to signature image which PostGrid will download and apply to cheques created with this bank account.
    BankAccountCreateSignatureText:
      type: object
      required:
        - bankName
        - bankCountryCode
        - accountNumber
        - signatureText
      properties:
        bankName:
          type: string
          description: The name of the bank.
        bankPrimaryLine:
          type: string
          description: The primary address line of the bank.
        bankSecondaryLine:
          type: string
          description: The secondary address line of the bank.
        bankCountryCode:
          allOf:
            - $ref: '#/components/schemas/BankAccountCountryCode'
          description: The country code of the bank.
        accountNumber:
          type: string
          description: The account number of the bank account.
        routingNumber:
          type: string
          description: The routing number of the bank account (for US).
        transitNumber:
          type: string
          description: The transit number of the bank account (for CA).
        routeNumber:
          type: string
          description: The route number of the bank account (for CA).
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        signatureText:
          type: string
          description: The signature text of the bank account.
    BankAccountList:
      type: object
      required:
        - object
        - totalCount
        - skip
        - limit
        - data
      properties:
        object:
          type: string
          enum:
            - list
        totalCount:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
    BankAccountUSFields:
      type: object
      properties:
        routingNumber:
          type: string
          description: The routing number of the bank account (for US).
    Box:
      type: object
      required:
        - status
        - id
        - live
        - createdAt
        - updatedAt
        - sendDate
        - mailingClass
        - to
        - object
        - from
        - cheques
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/OrderStatus'
          description: See `OrderStatus` for more details on the status of this order.
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        trackingNumber:
          type: string
          description: The tracking number of this order. Populated after an express/certified order has been processed for delivery.
        imbStatus:
          allOf:
            - $ref: '#/components/schemas/OrderIMBStatus'
          description: The Intelligent Mail Barcode (IMB) status of this order. Only populated for US-printed and US-destined orders. This is the most detailed way to track non-express/certified orders.
        imbZIPCode:
          type: string
          description: The most recent ZIP code of the USPS facility that the order has been processed through. Only populated when an `imbStatus` is present.
        imbDate:
          type: string
          format: date-time
          description: The last date that the IMB status was updated. See `imbStatus` for more details.
        cancellation:
          allOf:
            - $ref: '#/components/schemas/Cancellation'
          description: The cancellation details of this order. Populated if the order has been cancelled.
        url:
          type: string
          format: uri
          description: |-
            PostGrid renders a PDF preview for all orders. This should be inspected to ensure that the order is correct before it is sent out because it shows what will be printed and mailed to the recipient. Once the PDF preview is generated, this field will be returned by all `GET` endpoints which produce this order.

            This URL is a signed link to the PDF preview. It will expire after a short period of time. If you need to access this URL after it has expired, you can regenerate it by calling the `GET` endpoint again.
        id:
          type: string
          pattern: box_[a-zA-Z0-9]+
          description: A unique ID prefixed with box_
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        live:
          type: boolean
          description: '`true` if this is a live mode resource else `false`.'
        createdAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was created.
        updatedAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was last updated.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. For example, if this is a date on Tuesday, the order will transition to `printing` on Wednesday at midnight eastern time.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. This determines the speed and cost of delivery. See `OrderMailingClass` for more details.
        to:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The recipient of this order. This will be provided even if you delete the underlying contact.
        object:
          type: string
          enum:
            - box
          description: Always "box".
        from:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The contact of the 'from' field in read mode should be a fully expanded Contact.
        cheques:
          type: array
          items:
            $ref: '#/components/schemas/BoxCheque'
          description: The cheques inside this box (in read mode).
    BoxBase:
      type: object
      required:
        - object
      properties:
        object:
          type: string
          enum:
            - box
          description: Always "box".
          readOnly: true
      description: Base fields presents when reading a Box.
    BoxCheque:
      type: object
      required:
        - from
        - to
      properties:
        from:
          $ref: '#/components/schemas/Contact'
        to:
          $ref: '#/components/schemas/Contact'
      allOf:
        - $ref: '#/components/schemas/BoxChequeBase'
      description: |-
        Model representing a single cheque in "read" mode.
        - The "from" and "to" should be fully expanded Contact objects once created.
    BoxChequeBase:
      type: object
      required:
        - bankAccount
        - amount
        - number
      properties:
        bankAccount:
          type: string
          description: The bank account (ID or reference) from which the cheque amount is drawn.
        amount:
          type: integer
          format: int32
          description: The amount on the cheque.
        memo:
          type: string
          description: The memo text on the cheque (optional).
        logoURL:
          type: string
          format: uri
          description: A URL to a logo for the cheque (optional).
        messageTemplate:
          type: string
          description: An optional message template to be printed on or with the cheque.
        number:
          type: integer
          format: int32
          description: The cheque number.
        mergeVariables:
          type: object
          additionalProperties: {}
          description: A set of dynamic merge variables for customizing the cheque or accompanying documents (optional).
      description: Base fields that both reading and creating a cheque might share.
    BoxChequeCreate:
      type: object
      required:
        - from
        - to
      properties:
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
      allOf:
        - $ref: '#/components/schemas/BoxChequeBase'
      description: |-
        Model representing a single cheque in "create" mode.
        - The "from" and "to" can be ContactCreate objects (inline) or string contactIDs.
    BoxCreate:
      type: object
      required:
        - to
        - from
        - cheques
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The 'from' (sender) of the entire box. Accepts inline ContactCreate or a contactID.
        cheques:
          type: array
          items:
            $ref: '#/components/schemas/BoxChequeCreate'
          maxItems: 100
          description: The cheques to be mailed in the box. Only 100 cheques can be included in a box at a time.
    BoxList:
      type: object
      required:
        - object
        - totalCount
        - skip
        - limit
        - data
      properties:
        object:
          type: string
          enum:
            - list
        totalCount:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/Box'
      description: A list of Boxes.
    CancelReason:
      type: string
      enum:
        - user_initiated
        - invalid_content
        - invalid_order_mailing_class
    Cancellation:
      type: object
      required:
        - reason
      properties:
        reason:
          allOf:
            - $ref: '#/components/schemas/CancelReason'
          description: The reason for the cancellation.
          readOnly: true
        cancelledByUser:
          type: string
          description: The user ID who cancelled the order.
          readOnly: true
        note:
          type: string
          description: An optional note provided by the user who cancelled the order.
          readOnly: true
    Cheque:
      type: object
      required:
        - status
        - id
        - live
        - createdAt
        - updatedAt
        - sendDate
        - mailingClass
        - to
        - object
        - bankAccount
        - amount
        - from
        - size
        - currencyCode
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/OrderStatus'
          description: See `OrderStatus` for more details on the status of this order.
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        trackingNumber:
          type: string
          description: The tracking number of this order. Populated after an express/certified order has been processed for delivery.
        imbStatus:
          allOf:
            - $ref: '#/components/schemas/OrderIMBStatus'
          description: The Intelligent Mail Barcode (IMB) status of this order. Only populated for US-printed and US-destined orders. This is the most detailed way to track non-express/certified orders.
        imbZIPCode:
          type: string
          description: The most recent ZIP code of the USPS facility that the order has been processed through. Only populated when an `imbStatus` is present.
        imbDate:
          type: string
          format: date-time
          description: The last date that the IMB status was updated. See `imbStatus` for more details.
        cancellation:
          allOf:
            - $ref: '#/components/schemas/Cancellation'
          description: The cancellation details of this order. Populated if the order has been cancelled.
        url:
          type: string
          format: uri
          description: |-
            PostGrid renders a PDF preview for all orders. This should be inspected to ensure that the order is correct before it is sent out because it shows what will be printed and mailed to the recipient. Once the PDF preview is generated, this field will be returned by all `GET` endpoints which produce this order.

            This URL is a signed link to the PDF preview. It will expire after a short period of time. If you need to access this URL after it has expired, you can regenerate it by calling the `GET` endpoint again.
        id:
          type: string
          pattern: cheque_[a-zA-Z0-9]+
          description: A unique ID prefixed with cheque_
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        live:
          type: boolean
          description: '`true` if this is a live mode resource else `false`.'
        createdAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was created.
        updatedAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was last updated.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. For example, if this is a date on Tuesday, the order will transition to `printing` on Wednesday at midnight eastern time.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. This determines the speed and cost of delivery. See `OrderMailingClass` for more details.
        to:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The recipient of this order. This will be provided even if you delete the underlying contact.
        object:
          type: string
          enum:
            - cheque
          description: Always `cheque`.
        bankAccount:
          type: string
          description: The bank account (ID) associated with the cheque.
        amount:
          type: integer
          format: int32
          description: The amount of the cheque in cents.
        memo:
          type: string
          description: The memo of the cheque.
        message:
          type: string
          description: The message of the cheque.
        logoURL:
          type: string
          format: uri
          description: An optional logo URL for the cheque. This will be placed next to the recipient address at the top left corner of the cheque. This needs to be a public link to an image file (e.g. a PNG or JPEG file).
        number:
          type: integer
          format: int32
          description: The number of the cheque. If you don't provide this, it will automatically be set to an incrementing number starting from 1 across your entire account, ensuring that every cheque has a unique number.
        envelope:
          anyOf:
            - type: string
              enum:
                - standard
            - type: string
          description: The envelope of the cheque. If a custom envelope ID is not specified, defaults to `standard`.
        digitalOnly:
          allOf:
            - $ref: '#/components/schemas/DigitalOnly'
          description: The digitalOnly object contains data for digital-only cheques. A watermark must be provided.
        from:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The contact information of the sender.
        size:
          allOf:
            - $ref: '#/components/schemas/ChequeSize'
          description: The size of the cheque.
        currencyCode:
          anyOf:
            - type: string
              enum:
                - USD
            - type: string
              enum:
                - CAD
          description: The currency code of the cheque. This can be `USD` even if drawing from a Canadian bank account and vice versa. Defaults to the currency of the bank account country if not otherwise specified.
        depositReadyPDFURL:
          type: string
          format: uri
          description: A link to the deposit-ready PDF for a digital-only cheque, returned if requested and available.
    ChequeBase:
      type: object
      required:
        - object
        - bankAccount
        - amount
      properties:
        object:
          type: string
          enum:
            - cheque
          description: Always `cheque`.
          readOnly: true
        bankAccount:
          type: string
          description: The bank account (ID) associated with the cheque.
        amount:
          type: integer
          format: int32
          description: The amount of the cheque in cents.
        memo:
          type: string
          description: The memo of the cheque.
        message:
          type: string
          description: The message of the cheque.
        logoURL:
          type: string
          format: uri
          description: An optional logo URL for the cheque. This will be placed next to the recipient address at the top left corner of the cheque. This needs to be a public link to an image file (e.g. a PNG or JPEG file).
        number:
          type: integer
          format: int32
          description: The number of the cheque. If you don't provide this, it will automatically be set to an incrementing number starting from 1 across your entire account, ensuring that every cheque has a unique number.
        envelope:
          anyOf:
            - type: string
              enum:
                - standard
            - type: string
          description: The envelope of the cheque. If a custom envelope ID is not specified, defaults to `standard`.
        digitalOnly:
          allOf:
            - $ref: '#/components/schemas/DigitalOnly'
          description: The digitalOnly object contains data for digital-only cheques. A watermark must be provided.
      description: |-
        Represents a cheque resource, which may be physically mailed or digital-only.
        If digitalOnly is present, the cheque is treated as an eCheck and will have its status set to cancelled.
        depositReadyPDFURL is included if the cheque is digital and you request the deposit-ready PDF route.
    ChequeCreate:
      type: object
      required:
        - to
        - bankAccount
        - amount
        - from
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        bankAccount:
          type: string
          description: The bank account (ID) associated with the cheque.
        amount:
          type: integer
          format: int32
          description: The amount of the cheque in cents.
        memo:
          type: string
          description: The memo of the cheque.
        message:
          type: string
          description: The message of the cheque.
        logoURL:
          type: string
          format: uri
          description: An optional logo URL for the cheque. This will be placed next to the recipient address at the top left corner of the cheque. This needs to be a public link to an image file (e.g. a PNG or JPEG file).
        number:
          type: integer
          format: int32
          description: The number of the cheque. If you don't provide this, it will automatically be set to an incrementing number starting from 1 across your entire account, ensuring that every cheque has a unique number.
        envelope:
          anyOf:
            - type: string
              enum:
                - standard
            - type: string
          description: The envelope of the cheque. If a custom envelope ID is not specified, defaults to `standard`.
        digitalOnly:
          allOf:
            - $ref: '#/components/schemas/DigitalOnly'
          description: The digitalOnly object contains data for digital-only cheques. A watermark must be provided.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
        redirectTo:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: Providing this inserts a blank page at the start of the cheque with the recipient you provide here. This leaves the cheque that follows intact, which means you can use this to intercept at cheque at the redirected address and then mail it forward to the final recipient yourself. One use case for this is signing cheques at your office before mailing them out yourself.
        size:
          allOf:
            - $ref: '#/components/schemas/ChequeSize'
          description: The size of the cheque.
          default: us_letter
        currencyCode:
          anyOf:
            - type: string
              enum:
                - USD
            - type: string
              enum:
                - CAD
          description: The currency code of the cheque. This will be set to the default currency of the bank account (`USD` for US bank accounts and `CAD` for Canadian bank accounts) if not provided. You can set this value to `USD` if you want to draw USD from a Canadian bank account or vice versa.
    ChequeList:
      type: object
      required:
        - object
        - totalCount
        - skip
        - limit
        - data
      properties:
        object:
          type: string
          enum:
            - list
        totalCount:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/Cheque'
    ChequeSize:
      type: string
      enum:
        - us_letter
        - us_legal
      description: Enum representing the supported cheque sizes.
    Contact:
      type: object
      required:
        - object
        - addressLine1
        - countryCode
        - addressStatus
      properties:
        object:
          type: string
          enum:
            - contact
          description: Always `contact`.
          readOnly: true
        addressLine1:
          type: string
          description: The first line of the contact's address.
        addressLine2:
          type: string
          description: Second line of the contact's address, if applicable.
        city:
          type: string
          description: The city of the contact's address.
        provinceOrState:
          type: string
          description: Province or state of the contact's address.
        postalOrZip:
          type: string
          description: The postal or ZIP code of the contact's address.
        countryCode:
          type: string
          description: The ISO 3611-1 country code of the contact's address.
        addressStatus:
          type: string
          enum:
            - verified
            - corrected
            - failed
          description: One of `verified`, `corrected`, or `failed`.
          readOnly: true
        addressErrors:
          type: string
          description: A series of human-readable errors/warnings that were raised when running the provided address through our address verification.
          readOnly: true
        companyName:
          type: string
          description: Company name of the contact.
        firstName:
          type: string
          description: First name of the contact.
        lastName:
          type: string
          description: Last name of the contact.
        email:
          type: string
          description: Email of the contact.
        phoneNumber:
          type: string
          description: Phone number of the contact.
        jobTitle:
          type: string
          description: Job title of the contact.
        skipVerification:
          type: boolean
          description: If `true`, PostGrid will skip running this contact's address through our address verification system.
          default: false
        forceVerifiedStatus:
          type: boolean
          description: If `true`, PostGrid will force this contact to have an `addressStatus` of `verified` even if our address verification system says otherwise.
          default: false
      allOf:
        - type: object
          required:
            - id
            - live
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
              pattern: contact_[a-zA-Z0-9]+
              description: A unique ID prefixed with contact_
              readOnly: true
            description:
              type: string
              description: An optional string describing this resource. Will be visible in the API and the dashboard.
            metadata:
              type: object
              additionalProperties: {}
              description: See the section on Metadata.
            live:
              type: boolean
              description: '`true` if this is a live mode resource else `false`.'
              readOnly: true
            createdAt:
              type: string
              format: date-time
              description: The UTC time at which this resource was created.
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: The UTC time at which this resource was last updated.
              readOnly: true
    ContactCreate:
      oneOf:
        - $ref: '#/components/schemas/ContactCreateWithFirstName'
        - $ref: '#/components/schemas/ContactCreateWithCompanyName'
    ContactCreateWithCompanyName:
      type: object
      required:
        - addressLine1
        - countryCode
        - companyName
      properties:
        addressLine1:
          type: string
          description: The first line of the contact's address.
        addressLine2:
          type: string
          description: Second line of the contact's address, if applicable.
        city:
          type: string
          description: The city of the contact's address.
        provinceOrState:
          type: string
          description: Province or state of the contact's address.
        postalOrZip:
          type: string
          description: The postal or ZIP code of the contact's address.
        countryCode:
          type: string
          description: The ISO 3611-1 country code of the contact's address.
        firstName:
          type: string
          description: First name of the contact.
        lastName:
          type: string
          description: Last name of the contact.
        email:
          type: string
          description: Email of the contact.
        phoneNumber:
          type: string
          description: Phone number of the contact.
        jobTitle:
          type: string
          description: Job title of the contact.
        skipVerification:
          type: boolean
          description: If `true`, PostGrid will skip running this contact's address through our address verification system.
          default: false
        forceVerifiedStatus:
          type: boolean
          description: If `true`, PostGrid will force this contact to have an `addressStatus` of `verified` even if our address verification system says otherwise.
          default: false
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        companyName:
          type: string
    ContactCreateWithFirstName:
      type: object
      required:
        - addressLine1
        - countryCode
        - firstName
      properties:
        addressLine1:
          type: string
          description: The first line of the contact's address.
        addressLine2:
          type: string
          description: Second line of the contact's address, if applicable.
        city:
          type: string
          description: The city of the contact's address.
        provinceOrState:
          type: string
          description: Province or state of the contact's address.
        postalOrZip:
          type: string
          description: The postal or ZIP code of the contact's address.
        countryCode:
          type: string
          description: The ISO 3611-1 country code of the contact's address.
        companyName:
          type: string
          description: Company name of the contact.
        lastName:
          type: string
          description: Last name of the contact.
        email:
          type: string
          description: Email of the contact.
        phoneNumber:
          type: string
          description: Phone number of the contact.
        jobTitle:
          type: string
          description: Job title of the contact.
        skipVerification:
          type: boolean
          description: If `true`, PostGrid will skip running this contact's address through our address verification system.
          default: false
        forceVerifiedStatus:
          type: boolean
          description: If `true`, PostGrid will force this contact to have an `addressStatus` of `verified` even if our address verification system says otherwise.
          default: false
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        firstName:
          type: string
    CurrencyCode:
      type: string
      enum:
        - CAD
        - USD
      description: Enum representing the supported currency codes.
    DigitalOnly:
      type: object
      required:
        - watermark
      properties:
        watermark:
          type: string
          description: Text to be displayed as a watermark on the digital cheque.
    Letter:
      type: object
      required:
        - status
        - id
        - live
        - createdAt
        - updatedAt
        - sendDate
        - mailingClass
        - to
        - object
        - from
        - doubleSided
        - color
        - size
        - addressPlacement
        - envelope
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/OrderStatus'
          description: See `OrderStatus` for more details on the status of this order.
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        trackingNumber:
          type: string
          description: The tracking number of this order. Populated after an express/certified order has been processed for delivery.
        imbStatus:
          allOf:
            - $ref: '#/components/schemas/OrderIMBStatus'
          description: The Intelligent Mail Barcode (IMB) status of this order. Only populated for US-printed and US-destined orders. This is the most detailed way to track non-express/certified orders.
        imbZIPCode:
          type: string
          description: The most recent ZIP code of the USPS facility that the order has been processed through. Only populated when an `imbStatus` is present.
        imbDate:
          type: string
          format: date-time
          description: The last date that the IMB status was updated. See `imbStatus` for more details.
        cancellation:
          allOf:
            - $ref: '#/components/schemas/Cancellation'
          description: The cancellation details of this order. Populated if the order has been cancelled.
        url:
          type: string
          format: uri
          description: |-
            PostGrid renders a PDF preview for all orders. This should be inspected to ensure that the order is correct before it is sent out because it shows what will be printed and mailed to the recipient. Once the PDF preview is generated, this field will be returned by all `GET` endpoints which produce this order.

            This URL is a signed link to the PDF preview. It will expire after a short period of time. If you need to access this URL after it has expired, you can regenerate it by calling the `GET` endpoint again.
        id:
          type: string
          pattern: letter_[a-zA-Z0-9]+
          description: A unique ID prefixed with letter_
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        live:
          type: boolean
          description: '`true` if this is a live mode resource else `false`.'
        createdAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was created.
        updatedAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was last updated.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. For example, if this is a date on Tuesday, the order will transition to `printing` on Wednesday at midnight eastern time.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. This determines the speed and cost of delivery. See `OrderMailingClass` for more details.
        to:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The recipient of this order. This will be provided even if you delete the underlying contact.
        object:
          type: string
          enum:
            - letter
          description: Always `letter`.
        perforatedPage:
          type: number
          enum:
            - 1
          description: If specified, indicates which letter page is perforated. Currently, only the first page can be perforated.
        returnEnvelope:
          type: string
          description: The return envelope (ID) sent out with the letter, if any.
        attachedPDF:
          allOf:
            - $ref: '#/components/schemas/AttachedPDF'
          description: You can attach a PDF to the content you supply for this letter. This is useful if you have some stati
        plasticCard:
          allOf:
            - $ref: '#/components/schemas/PlasticCard'
          description: The plastic card sent out with the letter, if any.
        pdfWorkflowRun:
          type: string
          description: The ID of the PDF workflow run that created the letter, if any.
        from:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The contact information of the sender.
        doubleSided:
          type: boolean
          description: Indicates if the letter is double-sided.
        color:
          type: boolean
          description: Indicates if the letter is in color.
        size:
          allOf:
            - $ref: '#/components/schemas/LetterSize'
          description: The size of the letter.
        addressPlacement:
          allOf:
            - $ref: '#/components/schemas/AddressPlacement'
          description: The placement of the address on the letter.
        envelope:
          type: string
          description: The envelope (ID) for the letter or the default `standard` envelope.
        html:
          type: string
          description: The HTML content for the letter. You can supply _either_ this or `template` but not both.
        template:
          type: string
          description: The template ID used for the letter. You can supply _either_ this or `html` but not both.
        uploadedPDF:
          type: string
          format: uri
          description: If a PDF was uploaded for the letter, this will contain the signed link to the uploaded PDF.
    LetterBase:
      type: object
      required:
        - object
      properties:
        object:
          type: string
          enum:
            - letter
          description: Always `letter`.
          readOnly: true
        perforatedPage:
          type: number
          enum:
            - 1
          description: If specified, indicates which letter page is perforated. Currently, only the first page can be perforated.
        returnEnvelope:
          type: string
          description: The return envelope (ID) sent out with the letter, if any.
        attachedPDF:
          allOf:
            - $ref: '#/components/schemas/AttachedPDF'
          description: You can attach a PDF to the content you supply for this letter. This is useful if you have some stati
        plasticCard:
          allOf:
            - $ref: '#/components/schemas/PlasticCard'
          description: The plastic card sent out with the letter, if any.
        pdfWorkflowRun:
          type: string
          description: The ID of the PDF workflow run that created the letter, if any.
          readOnly: true
    LetterCreate:
      anyOf:
        - $ref: '#/components/schemas/LetterCreateWithHTML'
        - $ref: '#/components/schemas/LetterCreateWithTemplate'
        - $ref: '#/components/schemas/LetterCreateWithPDF'
    LetterCreateBase:
      type: object
      required:
        - to
        - from
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        perforatedPage:
          type: number
          enum:
            - 1
          description: If specified, indicates which letter page is perforated. Currently, only the first page can be perforated.
        returnEnvelope:
          type: string
          description: The return envelope (ID) sent out with the letter, if any.
        attachedPDF:
          allOf:
            - $ref: '#/components/schemas/AttachedPDF'
          description: You can attach a PDF to the content you supply for this letter. This is useful if you have some stati
        plasticCard:
          allOf:
            - $ref: '#/components/schemas/PlasticCard'
          description: The plastic card sent out with the letter, if any.
        doubleSided:
          type: boolean
          description: Indicates if the letter is double-sided.
          default: false
        color:
          type: boolean
          description: Indicates if the letter is in color.
          default: false
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
        size:
          allOf:
            - $ref: '#/components/schemas/LetterSize'
          description: The size of the letter.
          default: us_letter
        addressPlacement:
          allOf:
            - $ref: '#/components/schemas/AddressPlacement'
          description: The placement of the address on the letter.
          default: top_first_page
        envelope:
          type: string
          description: The envelope (ID) for the letter. You can either specify a custom envelope ID or use the default `standard` envelope.
          default: standard
    LetterCreateWithHTML:
      type: object
      required:
        - to
        - from
        - html
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        perforatedPage:
          type: number
          enum:
            - 1
          description: If specified, indicates which letter page is perforated. Currently, only the first page can be perforated.
        returnEnvelope:
          type: string
          description: The return envelope (ID) sent out with the letter, if any.
        attachedPDF:
          allOf:
            - $ref: '#/components/schemas/AttachedPDF'
          description: You can attach a PDF to the content you supply for this letter. This is useful if you have some stati
        plasticCard:
          allOf:
            - $ref: '#/components/schemas/PlasticCard'
          description: The plastic card sent out with the letter, if any.
        doubleSided:
          type: boolean
          description: Indicates if the letter is double-sided.
          default: false
        color:
          type: boolean
          description: Indicates if the letter is in color.
          default: false
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
        size:
          allOf:
            - $ref: '#/components/schemas/LetterSize'
          description: The size of the letter.
          default: us_letter
        addressPlacement:
          allOf:
            - $ref: '#/components/schemas/AddressPlacement'
          description: The placement of the address on the letter.
          default: top_first_page
        envelope:
          type: string
          description: The envelope (ID) for the letter. You can either specify a custom envelope ID or use the default `standard` envelope.
          default: standard
        html:
          type: string
          description: The HTML content for the letter. You can supply _either_ this or `template` but not both.
    LetterCreateWithPDF:
      type: object
      required:
        - to
        - from
        - pdf
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        perforatedPage:
          type: number
          enum:
            - 1
          description: If specified, indicates which letter page is perforated. Currently, only the first page can be perforated.
        returnEnvelope:
          type: string
          description: The return envelope (ID) sent out with the letter, if any.
        attachedPDF:
          allOf:
            - $ref: '#/components/schemas/AttachedPDF'
          description: You can attach a PDF to the content you supply for this letter. This is useful if you have some stati
        plasticCard:
          allOf:
            - $ref: '#/components/schemas/PlasticCard'
          description: The plastic card sent out with the letter, if any.
        doubleSided:
          type: boolean
          description: Indicates if the letter is double-sided.
          default: false
        color:
          type: boolean
          description: Indicates if the letter is in color.
          default: false
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
        size:
          allOf:
            - $ref: '#/components/schemas/LetterSize'
          description: The size of the letter.
          default: us_letter
        addressPlacement:
          allOf:
            - $ref: '#/components/schemas/AddressPlacement'
          description: The placement of the address on the letter.
          default: top_first_page
        envelope:
          type: string
          description: The envelope (ID) for the letter. You can either specify a custom envelope ID or use the default `standard` envelope.
          default: standard
        pdf:
          anyOf:
            - type: string
              format: uri
            - type: string
              format: byte
          description: A URL pointing to a PDF file for the letter or the PDF file itself.
    LetterCreateWithTemplate:
      type: object
      required:
        - template
      properties:
        template:
          type: string
          description: The template ID for the letter. You can supply _either_ this or `html` but not both.
    LetterList:
      type: object
      required:
        - object
        - totalCount
        - skip
        - limit
        - data
      properties:
        object:
          type: string
          enum:
            - list
        totalCount:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/Letter'
    LetterSize:
      type: string
      enum:
        - us_letter
        - a4
      description: Enum representing the supported letter sizes.
    NotFoundError:
      type: object
      required:
        - object
        - error
      properties:
        object:
          type: string
          enum:
            - error
        error:
          type: object
          properties:
            type:
              type: string
              enum:
                - not_found_error
            message:
              type: string
          required:
            - type
            - message
    OrderIMBStatus:
      type: string
      enum:
        - entered_mail_stream
        - out_for_delivery
        - returned_to_sender
    OrderMailingClass:
      type: string
      enum:
        - first_class
        - standard_class
        - express
        - certified
        - certified_return_receipt
        - registered
        - usps_first_class
        - usps_standard_class
        - usps_eddm
        - usps_express_2_day
        - usps_express_3_day
        - usps_first_class_certified
        - usps_first_class_certified_return_receipt
        - usps_first_class_registered
        - usps_express_3_day_signature_confirmation
        - usps_express_3_day_certified
        - usps_express_3_day_certified_return_receipt
        - ca_post_lettermail
        - ca_post_personalized
        - ca_post_neighbourhood_mail
        - ups_express_overnight
        - ups_express_2_day
        - ups_express_3_day
        - royal_mail_first_class
        - royal_mail_second_class
        - au_post_second_class
    OrderStatus:
      type: string
      enum:
        - ready
        - printing
        - processed_for_delivery
        - completed
        - cancelled
    PermissionMissingError:
      type: object
      required:
        - object
        - error
      properties:
        object:
          type: string
          enum:
            - error
        error:
          type: object
          properties:
            type:
              type: string
              enum:
                - permission_missing_error
            message:
              type: string
          required:
            - type
            - message
    PlasticCard:
      type: object
      required:
        - size
      properties:
        size:
          allOf:
            - $ref: '#/components/schemas/PlasticCardSize'
          description: The size of the plastic card.
        singleSided:
          allOf:
            - $ref: '#/components/schemas/PlasticCardSingleSided'
          description: The single-sided plastic card details.
        doubleSided:
          allOf:
            - $ref: '#/components/schemas/PlasticCardDoubleSided'
          description: The double-sided plastic card details.
      description: Model representing a plastic card.
    PlasticCardDoubleSided:
      type: object
      properties:
        frontHTML:
          type: string
          description: The HTML content for the front side of the double-sided plastic card.
        backHTML:
          type: string
          description: The HTML content for the back side of the double-sided plastic card.
        frontTemplate:
          type: string
          description: The template ID for the front side of the double-sided plastic card.
        backTemplate:
          type: string
          description: The template ID for the back side of the double-sided plastic card.
        pdf:
          anyOf:
            - type: string
              format: uri
            - type: string
              format: byte
          description: A URL pointing to a PDF file for the double-sided plastic card or the file itself.
      description: Model representing a double-sided plastic card.
    PlasticCardSingleSided:
      type: object
      properties:
        html:
          type: string
          description: The HTML content for the single-sided plastic card. Can specify one of this, `template`, or `pdf`.
        template:
          type: string
          description: The template ID for the single-sided plastic card.
        pdf:
          anyOf:
            - type: string
              format: uri
            - type: string
              format: byte
          description: A URL pointing to a PDF file for the single-sided plastic card or the PDF file itself.
      description: Model representing a single-sided plastic card.
    PlasticCardSize:
      type: string
      enum:
        - standard
      description: Enum representing the size of the plastic card.
    Postcard:
      type: object
      required:
        - status
        - id
        - live
        - createdAt
        - updatedAt
        - sendDate
        - mailingClass
        - to
        - object
        - size
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/OrderStatus'
          description: See `OrderStatus` for more details on the status of this order.
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        trackingNumber:
          type: string
          description: The tracking number of this order. Populated after an express/certified order has been processed for delivery.
        imbStatus:
          allOf:
            - $ref: '#/components/schemas/OrderIMBStatus'
          description: The Intelligent Mail Barcode (IMB) status of this order. Only populated for US-printed and US-destined orders. This is the most detailed way to track non-express/certified orders.
        imbZIPCode:
          type: string
          description: The most recent ZIP code of the USPS facility that the order has been processed through. Only populated when an `imbStatus` is present.
        imbDate:
          type: string
          format: date-time
          description: The last date that the IMB status was updated. See `imbStatus` for more details.
        cancellation:
          allOf:
            - $ref: '#/components/schemas/Cancellation'
          description: The cancellation details of this order. Populated if the order has been cancelled.
        url:
          type: string
          format: uri
          description: |-
            PostGrid renders a PDF preview for all orders. This should be inspected to ensure that the order is correct before it is sent out because it shows what will be printed and mailed to the recipient. Once the PDF preview is generated, this field will be returned by all `GET` endpoints which produce this order.

            This URL is a signed link to the PDF preview. It will expire after a short period of time. If you need to access this URL after it has expired, you can regenerate it by calling the `GET` endpoint again.
        id:
          type: string
          pattern: postcard_[a-zA-Z0-9]+
          description: A unique ID prefixed with postcard_
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        live:
          type: boolean
          description: '`true` if this is a live mode resource else `false`.'
        createdAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was created.
        updatedAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was last updated.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. For example, if this is a date on Tuesday, the order will transition to `printing` on Wednesday at midnight eastern time.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. This determines the speed and cost of delivery. See `OrderMailingClass` for more details.
        to:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The recipient of this order. This will be provided even if you delete the underlying contact.
        object:
          type: string
          enum:
            - postcard
          description: Always `postcard`.
        size:
          allOf:
            - $ref: '#/components/schemas/PostcardSize'
          description: The size of the postcard.
        from:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The contact information of the sender.
    PostcardBase:
      type: object
      required:
        - object
        - size
      properties:
        object:
          type: string
          enum:
            - postcard
          description: Always `postcard`.
          readOnly: true
        size:
          allOf:
            - $ref: '#/components/schemas/PostcardSize'
          description: The size of the postcard.
    PostcardCreate:
      anyOf:
        - $ref: '#/components/schemas/PostcardCreateWithHTML'
        - $ref: '#/components/schemas/PostcardCreateWithTemplate'
        - $ref: '#/components/schemas/PostcardCreateWithPDFURL'
        - $ref: '#/components/schemas/PostcardCreateWithPDFFile'
    PostcardCreateBase:
      type: object
      required:
        - to
        - size
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/PostcardSize'
          description: The size of the postcard.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`. Unlike other order types, the sender address is optional for postcards.
    PostcardCreateWithHTML:
      type: object
      required:
        - to
        - size
        - frontHTML
        - backHTML
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/PostcardSize'
          description: The size of the postcard.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`. Unlike other order types, the sender address is optional for postcards.
        frontHTML:
          type: string
          description: The HTML content for the front of the postcard. You can supply _either_ this or `frontTemplate` but not both.
        backHTML:
          type: string
          description: The HTML content for the back of the postcard. You can supply _either_ this or `backTemplate` but not both.
    PostcardCreateWithPDFFile:
      type: object
      required:
        - to
        - size
        - pdf
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/PostcardSize'
          description: The size of the postcard.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`. Unlike other order types, the sender address is optional for postcards.
        pdf:
          type: string
          format: byte
          description: A 2 page PDF file. The first page is the front of the postcard and the second page is the back (where the address will be stamped on).
    PostcardCreateWithPDFURL:
      type: object
      required:
        - to
        - size
        - pdf
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/PostcardSize'
          description: The size of the postcard.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`. Unlike other order types, the sender address is optional for postcards.
        pdf:
          type: string
          format: uri
          description: A URL pointing to a 2 page PDF file. The first page is the front of the postcard and the second page is the back (where the address will be stamped on).
    PostcardCreateWithTemplate:
      type: object
      required:
        - frontTemplate
        - backTemplate
      properties:
        frontTemplate:
          type: string
          description: The template ID for the front of the postcard. You can supply _either_ this or `frontHTML` but not both.
        backTemplate:
          type: string
          description: The template ID for the back of the postcard. You can supply _either_ this or `backHTML` but not both.
    PostcardList:
      type: object
      required:
        - object
        - totalCount
        - skip
        - limit
        - data
      properties:
        object:
          type: string
          enum:
            - list
        totalCount:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/Postcard'
    PostcardSize:
      type: string
      enum:
        - 6x4
        - 9x6
        - 11x6
      description: Enum representing the supported postcard sizes.
    RateLimitExceededError:
      type: object
      required:
        - object
        - error
      properties:
        object:
          type: string
          enum:
            - error
        error:
          type: object
          properties:
            type:
              type: string
              enum:
                - rate_limit_exceeded_error
            message:
              type: string
          required:
            - type
            - message
    SelfMailer:
      type: object
      required:
        - status
        - id
        - live
        - createdAt
        - updatedAt
        - sendDate
        - mailingClass
        - to
        - object
        - size
        - from
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/OrderStatus'
          description: See `OrderStatus` for more details on the status of this order.
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        trackingNumber:
          type: string
          description: The tracking number of this order. Populated after an express/certified order has been processed for delivery.
        imbStatus:
          allOf:
            - $ref: '#/components/schemas/OrderIMBStatus'
          description: The Intelligent Mail Barcode (IMB) status of this order. Only populated for US-printed and US-destined orders. This is the most detailed way to track non-express/certified orders.
        imbZIPCode:
          type: string
          description: The most recent ZIP code of the USPS facility that the order has been processed through. Only populated when an `imbStatus` is present.
        imbDate:
          type: string
          format: date-time
          description: The last date that the IMB status was updated. See `imbStatus` for more details.
        cancellation:
          allOf:
            - $ref: '#/components/schemas/Cancellation'
          description: The cancellation details of this order. Populated if the order has been cancelled.
        url:
          type: string
          format: uri
          description: |-
            PostGrid renders a PDF preview for all orders. This should be inspected to ensure that the order is correct before it is sent out because it shows what will be printed and mailed to the recipient. Once the PDF preview is generated, this field will be returned by all `GET` endpoints which produce this order.

            This URL is a signed link to the PDF preview. It will expire after a short period of time. If you need to access this URL after it has expired, you can regenerate it by calling the `GET` endpoint again.
        id:
          type: string
          pattern: self_mailer_[a-zA-Z0-9]+
          description: A unique ID prefixed with self_mailer_
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        live:
          type: boolean
          description: '`true` if this is a live mode resource else `false`.'
        createdAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was created.
        updatedAt:
          type: string
          format: date-time
          description: The UTC time at which this resource was last updated.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. For example, if this is a date on Tuesday, the order will transition to `printing` on Wednesday at midnight eastern time.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. This determines the speed and cost of delivery. See `OrderMailingClass` for more details.
        to:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The recipient of this order. This will be provided even if you delete the underlying contact.
        object:
          type: string
          enum:
            - self_mailer
          description: Always `self_mailer`.
        size:
          allOf:
            - $ref: '#/components/schemas/SelfMailerSize'
          description: The size of the self-mailer.
        from:
          allOf:
            - $ref: '#/components/schemas/Contact'
          description: The contact information of the sender.
    SelfMailerBase:
      type: object
      required:
        - object
        - size
      properties:
        object:
          type: string
          enum:
            - self_mailer
          description: Always `self_mailer`.
          readOnly: true
        size:
          allOf:
            - $ref: '#/components/schemas/SelfMailerSize'
          description: The size of the self-mailer.
    SelfMailerCreate:
      anyOf:
        - $ref: '#/components/schemas/SelfMailerCreateWithHTML'
        - $ref: '#/components/schemas/SelfMailerCreateWithTemplate'
        - $ref: '#/components/schemas/SelfMailerCreateWithPDFURL'
        - $ref: '#/components/schemas/SelfMailerCreateWithPDFFile'
    SelfMailerCreateBase:
      type: object
      required:
        - to
        - size
        - from
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/SelfMailerSize'
          description: The size of the self-mailer.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
    SelfMailerCreateWithHTML:
      type: object
      required:
        - to
        - size
        - from
        - insideHTML
        - outsideHTML
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/SelfMailerSize'
          description: The size of the self-mailer.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
        insideHTML:
          type: string
          description: The HTML content for the inside of the self-mailer. You can supply _either_ this or `insideTemplate` but not both.
        outsideHTML:
          type: string
          description: The HTML content for the outside of the self-mailer. You can supply _either_ this or `outsideTemplate` but not both.
    SelfMailerCreateWithPDFFile:
      type: object
      required:
        - to
        - size
        - from
        - pdf
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/SelfMailerSize'
          description: The size of the self-mailer.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
        pdf:
          type: string
          format: byte
          description: A 2 page PDF file. The first page is the inside of the self-mailer and the second page is the outside (where the address will be stamped on).
    SelfMailerCreateWithPDFURL:
      type: object
      required:
        - to
        - size
        - from
        - pdf
      properties:
        mergeVariables:
          type: object
          additionalProperties: {}
          description: These will be merged with the variables in the template or HTML you create this order with. The keys in this object should match the variable names in the template _exactly_ as they are case-sensitive. Note that these _do not_ apply to PDFs uploaded with the order.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
        sendDate:
          type: string
          format: date-time
          description: This order will transition from `ready` to `printing` on the day after this date. You can use this parameter to schedule orders for a future date.
        mailingClass:
          allOf:
            - $ref: '#/components/schemas/OrderMailingClass'
          description: The mailing class of this order. If not provided, automatically set to `first_class`.
        to:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The recipient of this order. You can either supply the contact information inline here or provide a contact ID. PostGrid will automatically deduplicate contacts regardless of whether you provide the information inline here or call the contact creation endpoint.
        size:
          allOf:
            - $ref: '#/components/schemas/SelfMailerSize'
          description: The size of the self-mailer.
        from:
          anyOf:
            - $ref: '#/components/schemas/ContactCreate'
            - type: string
          description: The contact information of the sender. You can pass contact information inline here just like you can for the `to`.
        pdf:
          type: string
          format: uri
          description: A URL pointing to a 2 page PDF file. The first page is the inside of the self-mailer and the second page is the outside (where the address will be stamped on).
    SelfMailerCreateWithTemplate:
      type: object
      required:
        - insideTemplate
        - outsideTemplate
      properties:
        insideTemplate:
          type: string
          description: The template ID for the inside of the self-mailer. You can supply _either_ this or `insideHTML` but not both.
        outsideTemplate:
          type: string
          description: The template ID for the outside of the self-mailer. You can supply _either_ this or `outsideHTML` but not both.
    SelfMailerList:
      type: object
      required:
        - object
        - totalCount
        - skip
        - limit
        - data
      properties:
        object:
          type: string
          enum:
            - list
        totalCount:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/SelfMailer'
    SelfMailerSize:
      type: string
      enum:
        - 8.5x11_bifold
        - 8.5x11_trifold
        - 9.5x16_trifold
      description: Enum representing the supported self-mailer sizes.
    ServiceUnavailableError:
      type: object
      required:
        - object
        - error
      properties:
        object:
          type: string
          enum:
            - error
        error:
          type: object
          properties:
            type:
              type: string
              enum:
                - service_unavailable_error
            message:
              type: string
          required:
            - type
            - message
    StructuredSearchQuery:
      type: string
      description: |-
        You can supply a structured search query instead of supplying unstructured text to any list endpoint help refine your search for a resource.

        For example, let's say you created a series of letters that all had `metadata: { campaignID: 'abc' }`. You could search for all those letters by passing in `{ "metadata.campaignID": "abc" }` into the `search` parameter.

        Note that this string must be valid JSON.
    Template:
      type: object
      required:
        - object
      properties:
        object:
          type: string
          enum:
            - template
          description: Always `template`.
          readOnly: true
        html:
          type: string
          description: The HTML content of this template.
      allOf:
        - type: object
          required:
            - id
            - live
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
              pattern: template_[a-zA-Z0-9]+
              description: A unique ID prefixed with template_
              readOnly: true
            description:
              type: string
              description: An optional string describing this resource. Will be visible in the API and the dashboard.
            metadata:
              type: object
              additionalProperties: {}
              description: See the section on Metadata.
            live:
              type: boolean
              description: '`true` if this is a live mode resource else `false`.'
              readOnly: true
            createdAt:
              type: string
              format: date-time
              description: The UTC time at which this resource was created.
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: The UTC time at which this resource was last updated.
              readOnly: true
    TemplateCreate:
      type: object
      properties:
        html:
          type: string
          description: The HTML content of this template.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
    TemplateList:
      type: object
      required:
        - object
        - totalCount
        - skip
        - limit
        - data
      properties:
        object:
          type: string
          enum:
            - list
        totalCount:
          type: integer
          format: int32
        skip:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        data:
          type: array
          items:
            $ref: '#/components/schemas/Template'
    TemplateUpdate:
      type: object
      properties:
        html:
          type: string
          description: The HTML content of this template.
        description:
          type: string
          description: An optional string describing this resource. Will be visible in the API and the dashboard.
        metadata:
          type: object
          additionalProperties: {}
          description: See the section on Metadata.
    UnauthorizedError:
      type: object
      required:
        - object
        - error
      properties:
        object:
          type: string
          enum:
            - error
        error:
          type: object
          properties:
            type:
              type: string
              enum:
                - missing_auth_error
            message:
              type: string
          required:
            - type
            - message
    UnprocessableError:
      type: object
      required:
        - object
        - error
      properties:
        object:
          type: string
          enum:
            - error
        error:
          type: object
          properties:
            type:
              type: string
            message:
              type: string
          required:
            - type
            - message
      description: This gets returned when the action you are trying to do is not possible. This could be due to any number of reasons hence why the `type` is just a string.
    ValidationError:
      type: object
      required:
        - object
        - error
      properties:
        object:
          type: string
          enum:
            - error
        error:
          type: object
          properties:
            type:
              type: string
              enum:
                - validation_error
            message:
              type: string
          required:
            - type
            - message
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
servers:
  - url: https://api.postgrid.com/print-mail/v1
    description: Primary endpoint
    variables: {}
